{"version":3,"sources":["utterances/Help.js","utterances/Instructions.js","utterances/Form.js","utterances/PhraseVerification.js","utterances/Selections.js","utterances/ThankYou.js","utterances/Utterances.js","App.js","reportWebVitals.js","index.js"],"names":["MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","animation","centered","Header","closeButton","Title","id","Body","children","Footer","Button","onClick","onHide","Help","React","useState","modalShow","setModalShow","variant","show","className","style","Instructions","instructions","progress","hideHelp","hideHeader","role","aria-valuenow","aria-valuemin","aria-valuemax","parseInt","Form","utterance","maxLength","maxLengthPerIntent","intents","state","length","handleChange","bind","handleSubmit","event","this","target","value","setState","preventDefault","onSubmit","word","valid","isUtteranceValid","hasSconj","trim","split","errorMessage","some","intent","toLowerCase","indexOf","context","icons","disabled","map","i","noValidate","rows","type","aria-describedby","onChange","placeholder","required","Component","PhraseVerification","handleYes","handleNo","onBack","Selections","index","selectionStart","selectionEnd","handleBack","handleMouseUp","textarea","document","getElementById","setSelectionRange","getSelection","selected","selection","substring","onMouseUp","STATUS","Utterances","intentsSelections","status","pendingIntentIndex","handleSubmitUtterance","handlePhraseVerification","handleSelection","handleMTurkSubmit","annotationsValue","intentSelections","join","querySelector","onsubmit","submit","newStatus","Math","max","Selectionsuccess","allIntentsVerified","every","min","otherStepsCount","getProgress","getInstructions","ThankYou","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getAttribute","icon","console","log","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6dc4e278.chunk.js","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button } from 'react-bootstrap';\n\n\nconst MyVerticallyCenteredModal = (props) => {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            animation={false}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Help\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {props.children}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst Help = () => {\n    const [modalShow, setModalShow] = React.useState(false);\n\n    return (\n        <>\n            <Button variant=\"info\" onClick={() => setModalShow(true)}>\n                Help\n            </Button>\n\n            <MyVerticallyCenteredModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n            >\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Good example</h5>\n                            <div className=\"card border-success rounded mb-3 p-3\" style={{\"height\": \"321px\"}}>\n                                <strong>Context</strong>\n                                <p>A workout</p>\n\n                                <strong>Your administrative assistance can do the following:</strong>\n                                <ol>\n                                    <li>Get weather information</li>\n                                    <li>Send a text message to anyone on your contact list</li>\n                                </ol>\n\n                                <strong>Response</strong>\n                                <p><span style={{\"background-color\": \"#7FFF00\"}}>Tell Thomas to bring shorts </span><span style={{\"background-color\": \"yellow\"}}>if it's going to be hot tomorrow</span></p>\n                            </div>\n\n                            <div className=\"card border-success rounded mb-3 p-3\" style={{\"height\": \"321px\"}}>\n                                <strong>Context</strong>\n                                <p>A concert</p>\n\n                                <strong>Your administrative assistance can do the following:</strong>\n                                <ol>\n                                    <li>Get events information</li>\n                                    <li>Create a reminder</li>\n                                </ol>\n\n                                <strong>Response</strong>\n                                <p><span style={{\"background-color\": \"yellow\"}}>Create a reminder for </span><span style={{\"background-color\": \"#7FFF00\"}}>every Drake's concert this summer in the city</span></p>\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bad example</h5>\n                            <div className=\"card border-danger rounded mb-3 p-3\" style={{\"height\": \"321px\"}}>\n                                <strong>Context</strong>\n                                <p>A workout</p>\n\n                                <strong>Your administrative assistance can do the following:</strong>\n                                <ol>\n                                    <li>Get weather information</li>\n                                    <li>Send a text message to anyone on your contact list</li>\n                                </ol>\n\n                                <strong>Response (<span style={{ \"color\": \"red\" }}>wrong - using just one intent</span>)</strong>\n                                <p style={{ \"color\": \"red\" }}>Is it going to be hot tomorrow?</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n\n            </MyVerticallyCenteredModal>\n        </>\n    );\n};\n\nexport default Help;\n","import React from 'react';\nimport Help from './Help';\n\nconst Instructions = ({ instructions, progress, hideHelp, hideHeader }) => {\n    return (\n        <div className=\"instructions\">\n            <div className=\"container\">\n\n                <div className=\"mx-auto\">\n                    {!hideHeader &&\n                        <h4>Instructions</h4>\n                    }\n                    <div>{instructions}</div>\n                    {!hideHelp &&\n                        <Help />\n                    }\n                </div>\n                <div className=\"progress mt-5 mb-5 ml-auto mr-auto\" style={{ \"width\": \"90%\" }}>\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{ \"width\": `${progress}%` }} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\">{parseInt(progress)}%</div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Instructions;           ","import React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { utterance, maxLength, maxLengthPerIntent, intents } = props;\n    this.state = {\n      utterance: utterance,\n      maxLength: maxLength || maxLengthPerIntent * intents.length || 250,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { maxLength } = this.state;\n    const utterance = event.target.value;\n    if (utterance.length <= maxLength) {\n      this.setState({ utterance });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { onSubmit, word } = this.props;\n    const { utterance } = this.state;\n    const valid = this.isUtteranceValid();\n    const hasSconj = !!word && word.trim().length > 0;\n    if (valid) {\n      onSubmit(utterance, hasSconj);\n    } else {\n      this.setState({ valid });\n    }\n  }\n\n  isUtteranceValid() {\n    const { intents, word } = this.props;\n    const { utterance } = this.state;\n\n    if (!utterance || utterance.length === 0) {\n      return false;\n    } else if (utterance.split(\" \").length <= 4) {\n      this.setState({ errorMessage: <span>Please write a valid request that includes all the tasks.</span> })\n      return false;\n    } else if (intents.some(intent => utterance.toLowerCase().indexOf(intent.toLowerCase()) >= 0)) {\n      this.setState({ errorMessage: <span>Please write a valid request in plain English.</span> })\n      return false;\n    } else if (word && word.length > 0 && utterance.toLowerCase().indexOf(` ${word.toLowerCase()}`) === -1) {\n      this.setState({ errorMessage: <span>Please write a valid request that includes the mandatory word <strong>{word}</strong>.</span> })\n      return false;\n    } else if ((utterance.indexOf(\"?\") >= 0 && utterance.indexOf(\"?\") < utterance.length * 0.5) || utterance.split(\"?\").length > 1) {\n      this.setState({ errorMessage: <span>Please phrase the utterance as a <strong>single</strong> request (and not in multiple phrases).</span> })\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  render() {\n    const { context, intents, icons, word } = this.props;\n    const { utterance, valid, errorMessage, maxLength } = this.state;\n    const disabled = !(utterance && utterance.length > 0);\n\n    return (\n      <div className=\"form\">\n        <div className=\"container ml-auto mr-auto card border-warning bg-light rounded p-3\" style={{ \"marginTop\": \"50px\", \"marginBottom\": \"50px\", \"width\": \"100%\", \"borderColor\": \"#ffc107\" }}>\n          <div className=\"row mb-3\">\n            <div className=\"col\">\n              <div className=\"bd-callout bd-callout-yellow1\">\n                <p className=\"text-muted\">Context:</p>\n                <h4>{context}</h4>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row mb-3\">\n            <div className=\"col\">\n              <div className=\"bd-callout bd-callout-yellow2\">\n                <p className=\"text-muted\">Tasks your assistance can do for you:</p>\n                {intents.map((intent, i) => (\n                  <h4 key={i}><span className={`bi bi-${icons[i]}`} style={{ \"paddingRight\": \"15px\" }} />{intent}</h4>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {word && word.length > 0 &&\n            <div className=\"row mb-3\">\n              <div className=\"col\">\n                <div className=\"bd-callout bd-callout-yellow2\">\n                  <h6>Please include the word <span className=\"pl-1 pr-1\" style={{ \"fontSize\": \"2rem\" }}>{word}</span> to connect the tasks in your request.</h6>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n\n        <div className=\"container\">\n          <h2>Submit your request</h2>\n\n          <form className=\"g-3 needs-validation\" onSubmit={this.handleSubmit} noValidate>\n            <div className=\"has-validation mb-3\">\n              <label className=\"form-label\">Write a request to your administrative assistance</label>\n              <textarea className={`form-control ${(valid === true && \"is-valid\") || (valid === false && \"is-invalid\")}`}\n                rows=\"5\" value={utterance} type=\"text\" id=\"utterance\" aria-describedby=\"help\"\n                onChange={this.handleChange} placeholder=\"Type your request here...\" required>\n              </textarea>\n              <div className={`p-1 m-1 ${(utterance || \"\").length > maxLength * 0.8 ? 'text-white bg-danger' : ''}`}>\n                {(utterance || \"\").length} / {maxLength}\n              </div>\n              <div id=\"help\" className=\"form-text text-muted\">Remember to use <strong>all the tasks</strong> in your request</div>\n              <div className=\"invalid-feedback\">\n                {errorMessage}\n              </div>\n            </div>\n            <div className=\"btn-toolbar\" role=\"toolbar\">\n              <div className=\"btn-group mr-2 mb-3\" role=\"group\">\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={disabled}>Submit</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form;","import React from 'react';\n\nclass PhraseVerification extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleYes = this.handleYes.bind(this);\n        this.handleNo = this.handleNo.bind(this);\n    }\n\n    handleYes(event) {\n        event.preventDefault();\n        this.props.onSubmit();\n    }\n\n    handleNo(event) {\n        event.preventDefault();\n        this.props.onBack();\n    }\n\n    render() {\n        const { utterance, word } = this.props;\n        return (\n            <div className=\"phrase-verification\">\n                <div className=\"container\">\n                    <p className=\"text-center text-muted rounded border p-3 mb-3\">{utterance}</p>\n                    <h5 className=\"pr-3 pl-3 mb-3\">Did you connect the tasks in your request using the word <span className=\"pl-1 pr-1\" style={{\"fontSize\": \"2.2rem\"}}>{word}</span>?</h5>\n                    <div className=\"col-md-12 text-center\" role=\"toolbar\">\n                        <div className=\"btn-group mr-2\" role=\"group\">\n                            <button type=\"Submit\" className=\"btn btn-success\" onClick={this.handleYes}>Yes</button>\n                        </div>\n                        <div className=\"btn-group mr-2\" role=\"group\">\n                            <button type=\"Back\" className=\"btn btn-danger\" onClick={this.handleNo}>No</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default PhraseVerification;","import React from 'react';\n\nclass Selections extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { index, selectionStart, selectionEnd } = props;\n        this.state = {\n            index,\n            selectionStart,\n            selectionEnd,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { index, selectionStart, selectionEnd } = props;\n        return {\n            index,\n            selectionStart: index === state.index ? state.selectionStart : selectionStart,\n            selectionEnd: index === state.index ? state.selectionEnd : selectionEnd\n        };\n    }\n\n    getSelection() {\n        const textarea = document.getElementById(\"utterance-selection\");\n        const selectionStart = textarea && textarea.selectionStart;\n        const selectionEnd = textarea && textarea.selectionEnd;\n        return { selectionStart, selectionEnd };\n    }\n\n    setSelectedText(selectionStart, selectionEnd) {\n        const textarea = document.getElementById(\"utterance-selection\");\n        if (textarea) {\n            // textarea.selectionStart = selectionStart;\n            // textarea.selectionEnd = selectionEnd;\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n\n    handleMouseUp(event) {\n        // event.preventDefault();\n        const { selectionStart, selectionEnd } = this.getSelection();\n        this.setState({ selectionStart, selectionEnd, errorMessage: null });\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const { selectionStart, selectionEnd } = this.state;\n\n        if (selectionStart >= 0 && selectionEnd > selectionStart) {\n            const { index } = this.props;\n            this.props.onSubmit(index, selectionStart, selectionEnd, true);\n        } else {\n            this.setState({ selected: true, errorMessage: \"Please select the part in your utterance that fits the task.\" })\n        }\n\n    }\n\n    handleBack(event) {\n        event.preventDefault();\n\n        this.props.onBack();\n    }\n\n    render() {\n        const { utterance, intents, index } = this.props;\n        const intent = intents[index];\n        const { selectionStart, selectionEnd } = this.state;\n        // const valid = selected && selectionStart >= 0 && selectionEnd > selectionStart && !errorMessage;\n        const disabled = !(selectionStart >= 0 && selectionEnd > selectionStart);\n        const selection = utterance.substring(selectionStart, selectionEnd);\n\n        // this.setSelectedText(selectionStart, selectionEnd);\n\n        return (\n            <div className=\"Selections\">\n                <div className=\"container\">\n                    <div className=\"card text-dark border-primary mb-3\">\n                        <div className=\"card-header text-white bg-primary\">Select the text that references <strong>\"{intent}\"</strong>:</div>\n                        <div className=\"card-body p-0\">\n                            <p className=\"card-text\">\n                                <textarea className=\"form-control p-3\" rows=\"5\"\n                                    value={utterance} type=\"text\" id=\"utterance-selection\" aria-describedby=\"help\" \n                                    style={{ \"cursor\": \"text\", \"border\": \"none\" }}\n                                    onChange={this.handleChange} onMouseUp={this.handleMouseUp} />\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"card text-dark bg-light mb-3\">\n                        <div className=\"card-header\">You selected:</div>\n                        <div className=\"card-body\">\n                            <p className=\"card-text\">{selection}</p>\n                        </div>\n                    </div>\n                    <div className=\"btn-toolbar\" role=\"toolbar\">\n                        <div className=\"btn-group mr-2\" role=\"group\">\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit} disabled={disabled}>Submit</button>\n                        </div>\n                        <div className=\"btn-group mr-2\" role=\"group\">\n                            <button type=\"Back\" className=\"btn btn-secondary\" onClick={this.handleBack}>Back</button>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Selections;","import React from 'react';\n\nclass Selections extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.props.onSubmit();\n    }\n\n    handleBack(event) {\n        event.preventDefault();\n        this.props.onBack();\n    }\n\n    render() {\n        return (\n            <div className=\"thank-you\">\n                <div className=\"container\">\n                    <h2 className=\"text-muted text-center mb-3\">Thank You.</h2>\n                    <div className=\"col-md-12 text-center\" role=\"toolbar\">\n                        <div className=\"btn-group mr-2\" role=\"group\">\n                            <button type=\"Submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Done</button>\n                        </div>\n                        <div className=\"btn-group mr-2\" role=\"group\">\n                            <button type=\"Back\" className=\"btn btn-secondary\" onClick={this.handleBack}>Back</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Selections;","import React from 'react';\nimport Instructions from './Instructions'\nimport Form from './Form';\nimport PhraseVerification from './PhraseVerification';\nimport Selections from './Selections';\nimport ThankYou from './ThankYou';\n\nconst STATUS = {\n    init: 0,\n    pendingPhraseVerification: 1,\n    pendingSelection: 2,\n    end: 3\n};\n\nexport default class Utterances extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { intents } = props;\n        const intentsSelections = intents.map(intent => ([0, 0]));\n        this.state = {\n            status: STATUS.init,\n            intentsSelections,\n            pendingIntentIndex: 0\n        };\n\n        this.handleSubmitUtterance = this.handleSubmitUtterance.bind(this);\n        this.handlePhraseVerification = this.handlePhraseVerification.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n        this.handleMTurkSubmit = this.handleMTurkSubmit.bind(this);\n    }\n\n    getInstructions() {\n        const { intents, icons } = this.props;\n        const { status, pendingIntentIndex } = this.state;\n\n        if (status === STATUS.init) {\n            return (\n                <div>\n                    <p className=\"lead fs-5 d\">Your administrative assistance is very smart. Write a request in plain English that will use the given tasks your assistance can do in the provided context.</p>\n                    <p>Try to be as creative as you can, don't be overly formal, simply write in plain English what you would say if you were in the given situation. Click 'Help' to see few examples.</p>\n                    <p className=\"bg-warning text-dark text-center p-2 mb-4\"><em>The best utterances phrase the tasks in relation to one-another in a <u>single</u> request.</em></p>\n                </div>\n            );\n        } else if (status === STATUS.pendingPhraseVerification) {\n            return (\n                <div>\n                    <p className=\"lead fs-5 d\">Verify your request was written correctly. </p>\n                    <p className=\"bg-warning text-dark text-center p-2 mb-4\"><em>The best utterances phrase the tasks in relation to one-another in a <u>single</u> request.</em></p>\n                </div>\n            );\n        } else if (status === STATUS.pendingSelection) {\n            return (\n                <div>\n                    <p className=\"lead fs-5 d\">Highlight with your mouse the part in your request that references the following task:</p>\n                    <h5 className=\"mt-3 mb-4\"><span className={`bi bi-${icons[pendingIntentIndex]}`} style={{ \"paddingRight\": \"15px\" }} />{intents[pendingIntentIndex]}</h5>\n                </div>\n            );\n        } else {\n            return ['', '']\n                ;\n        }\n    }\n\n    handleMTurkSubmit() {\n        const { utterance, intentsSelections } = this.state;\n\n        const annotationsValue = intentsSelections.map(intentSelections => intentSelections.join(\", \")).join(\" | \");\n        document.querySelector('crowd-form').onsubmit = () => {\n            if (document.getElementById('utterance')) {\n                document.getElementById('utterance').value = utterance;\n                document.getElementById('annotations').value = annotationsValue;\n            }\n        };\n        document.querySelector('crowd-form').submit();\n    }\n\n    handlePhraseVerification() {\n        const status = STATUS.pendingSelection;\n        this.setState({ status });\n    }\n\n    handleSubmitUtterance(utterance, hasSconj) {\n        const status = hasSconj ? STATUS.pendingPhraseVerification : STATUS.pendingSelection\n        this.setState({ utterance, status })\n    }\n\n    handleBack() {\n        const { word } = this.props;\n        const { status, pendingIntentIndex } = this.state;\n\n        let newStatus = STATUS.pendingSelection;\n        if (status === STATUS.pendingSelection && pendingIntentIndex === 0) {\n            newStatus = word && word.length > 0 ? STATUS.pendingPhraseVerification : STATUS.init;\n        } else if (status === STATUS.pendingPhraseVerification) {\n            newStatus = STATUS.init;\n        }\n\n        this.setState({ status: newStatus, pendingIntentIndex: Math.max(pendingIntentIndex - 1, 0) });\n    }\n\n    handleSelection(index, selectionStart, selectionEnd, Selectionsuccess) {\n        let { intentsSelections, status } = this.state;\n        intentsSelections[index] = [selectionStart, selectionEnd];\n\n        // check if all intents have been verified\n        const { intents } = this.props;\n        const allIntentsVerified = intents.every((intent, i) => intentsSelections[i][0] >= 0 && intentsSelections[i][1] > intentsSelections[i][0]);\n        if (Selectionsuccess && allIntentsVerified && index === (intents.length - 1)) {\n            status = STATUS.end;\n        }\n\n        this.setState({ intentsSelections, status, pendingIntentIndex: Math.min(index + 1, intents.length) });\n    }\n\n    getProgress() {\n        const { intents, word } = this.props;\n        const { status, pendingIntentIndex } = this.state;\n        const otherStepsCount = 1 + (word ? 1 : 0);\n\n        switch (status) {\n            case STATUS.init:\n                return 0;\n            case STATUS.pendingPhraseVerification:\n                return 100 * ((1 + pendingIntentIndex) / (intents.length + otherStepsCount));\n            case STATUS.pendingSelection:\n                return 100 * ((2 + pendingIntentIndex) / (intents.length + otherStepsCount));\n            case STATUS.end:\n                return 100;\n            default:\n                return 0;\n        }\n    }\n\n    render() {\n        const { context, intents, icons, word, maxLength, maxLengthPerIntent } = this.props;\n        const { status, utterance, intentsSelections, pendingIntentIndex } = this.state;\n        const [selectionStart, selectionEnd] = pendingIntentIndex >= 0 && pendingIntentIndex < intents.length ? intentsSelections[pendingIntentIndex] : [0, 0];\n        const progress = this.getProgress();\n        const instructions = this.getInstructions();\n\n        return (\n            <div className=\"utterances\">\n                <div className=\"container\">\n                    <div className=\"row align-items-center\" style={{ \"height\": \"550px\" }}>\n                        <div className=\"col\">\n                            <Instructions instructions={instructions} progress={progress} hideHeader={status === STATUS.end} hideHelp={status === STATUS.end} />\n                        </div>\n                        <div className=\"col\">\n                            {status === STATUS.init &&\n                                <Form utterance={utterance} context={context} intents={intents} icons={icons} word={word} maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} onSubmit={this.handleSubmitUtterance} />\n                            }\n                            {status === STATUS.pendingPhraseVerification &&\n                                <PhraseVerification utterance={utterance} word={word} intents={intents} icons={icons} onSubmit={this.handlePhraseVerification} onBack={this.handleBack} />\n                            }\n                            {status === STATUS.pendingSelection &&\n                                <Selections utterance={utterance} selectionStart={selectionStart} selectionEnd={selectionEnd} intents={intents} icons={icons} index={pendingIntentIndex} onSubmit={this.handleSelection} onBack={this.handleBack} />\n                            }\n                            {status === STATUS.end &&\n                                <ThankYou onSubmit={this.handleMTurkSubmit} onBack={this.handleBack} />\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import Utterances from './utterances/Utterances'\n\nconst App = ({ id, context, intents, icons, instructions, word, maxLength, maxLengthPerIntent }) => {\n  return (\n    <div className=\"App\">\n      <Utterances id={id} context={context} intents={intents}\n        icons={icons} instructions={instructions} word={word}\n        maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst id = document.getElementById('root').getAttribute('data-id');\nconst context = document.getElementById('root').getAttribute('data-context');\nconst intents = document.getElementById('root').getAttribute('data-intents').split(\"|\").map(intent => intent.trim());\nconst icons = document.getElementById('root').getAttribute('data-icons').split(\"|\").map(icon => icon.trim());\nconst instructions = document.getElementById('root').getAttribute('data-instructions');\nconst word = document.getElementById('root').getAttribute('data-word');\nconst maxLength = parseInt(document.getElementById('root').getAttribute('data-max-length'));\nconst maxLengthPerIntent = parseInt(document.getElementById('root').getAttribute('data-max-length-per-intent'));\n\nconsole.log(\"context\", document.getElementById('root').getAttribute('data-context'))\nconsole.log(\"intents\", document.getElementById('root').getAttribute('data-intents'))\nconsole.log(\"icons\", document.getElementById('root').getAttribute('data-icons'))\n\nReactDOM.render(\n  <React.StrictMode>\n    <App id={id} context={context} intents={intents} icons={icons} instructions={instructions} word={word}\n      maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}