{"version":3,"sources":["utterances4/home/Home.js","utterances4/instructions/Instructions.js","utterances4/Modal.js","utterances4/utterance/Utterance.js","utterances4/verification/Help.js","utterances4/verification/Verification.js","utterances4/selections/Help.js","utterances4/selections/Selections.js","utterances4/ThankYou.js","utterances4/App.js","App.js","index.js"],"names":["Home","props","onClickSkip","className","steps","loop","Infinity","wrapper","type","onClick","Instructions","this","onClickBack","onClickNext","Carousel","variant","interval","Item","React","Component","MyVerticallyCenteredModal","Modal","size","aria-labelledby","animation","centered","Header","Title","id","Body","children","Footer","Button","onHide","AppModal","show","Utterance","utterance","context","contexts","intents","state","getRandomContext","domains","handleClickNext","bind","handleClickHelp","handleTextAreaChange","handleSwitchContextClick","prevProps","prevState","setState","event","index","utteranceLimit","disableTextOverflow","onUtteranceChange","target","value","newUtterance","length","Math","floor","random","onContextChange","conjunctionWords","conjunctionWords2","reduce","prevVal","w","concat","hasUtterance","Boolean","trim","hasConjunctionWords","conjunctionWordsIncluded","filter","toLowerCase","indexOf","split","valid","errorMessage","map","join","s","preventDefault","isUtteranceValid","showHelp","maxUtterances","titles","title","min","slice","domain","i","data-idx","onSubmit","handleSubmit","noValidate","style","rows","aria-describedby","onChange","placeholder","required","VERIFICATION_STEPS","Verification","step","constraintIntents","selectedIntents","selectedConstraints","handleClickBack","handleDecrementCounter","handleIncrementCounter","onSelectIntent","onSelectConstraint","parseInt","currentTarget","getAttribute","indexToRemove","splice","push","minConstraints","minIntents","isValid","softIntentRequirement","every","intent","text","intentIcons","constraintIcons","onClickHelp","items","getInstruction","intentsCounter","Array","fill","idx","constraintsCounter","itemsCounter","itemIcons","item","data-index","disabled","data-type","name","max","readOnly","htmlFor","SELECTIONS_STEPS","Selections","selectIndex","intentsSelections","constraintsSelections","isNaN","handleReset","handleMouseUp","getSelection","selectionStart","selectionEnd","isSelectionValid","onSelection","nextIndex","previousIndex","selection","window","baseOffset","extentOffset","baseNode","extentNode","textContent","currentNode","parentNode","innerHTML","previousSibling","childNodes","allowOverlaps","valid1","valid2","result","valid3","total","icon","selectedText","substring","selections","v","sort","a","b","onMouseUp","feedback","onFeedbackChange","SCREENS","App","constraints","currentScreen","workerResponses","handleFeedbackChange","handleUtteranceChange","handleSelectIntent","handleSelectConstraint","handleSelection","workerResponsesValues","workerResponse","intentsValue","constraintsValue","intentsAnnotationsValue","constraintsAnnotationsValue","workerResponseValue","intentsAnnotations","constraintsAnnotations","feedbackValue","document","querySelector","onsubmit","getElementById","JSON","stringify","submit","submitToMTurk","scrollTo","currentSelectionIndex","maxLength","maxLengthPerIntent","minConjunctionWords","selectionsStep","verificationStep","onClickExample","selectionIndex","ThankYou","displayedScreen","getDisplayedScreen","linkWordIdx","quantifiers","quantifierIdx","getData","attribute","startsWith","x","word","display","verification","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8ee53e3a.chunk.js","sourcesContent":["import React from 'react';\nimport Typical from 'react-typical';\nimport './Home.scss';\n\n\nconst Home = (props) => {\n    const { onClickSkip } = props;\n    return (\n        <div className=\"home\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"header text-center\">\n                            <h1>Virtual Assistant++</h1>\n                            <h3><span className=\"bi bi-mic\" /></h3>\n                            <p>Your goal in this task is to write <span className=\"purple\">Complex Instructions</span> to the perfect virtual assistant (better than \n                                Google assistant, Alexa or Siri)</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h3 className=\"text-center\"><span className=\"intent-icon bi bi-stars\" /></h3>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <div className=\"example vertical-center-container\">\n                                            <div className=\"vertical-center\">\n                                                <div className=\"intent-textarea text-center\">\n                                                    <Typical\n                                                        steps={[\n                                                            \"Unless there is traffic on my route home, text Mom I'll be there in 10 minutes\", 5000\n                                                        ]}\n                                                        loop={Infinity}\n                                                        wrapper=\"p\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row mb-5\">\n                    <div className=\"col\">\n                        <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                            <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickSkip}>\n                                Start\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\nimport './Instructions.scss';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const { onClickBack, onClickNext } = this.props;\n\n        return (\n            <div className=\"instructions help\">\n                <div className=\"container\">\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <h1>Instructions</h1>\n                            <h4>Please write complex instructions that you would ask an ideal virtual assistant.</h4>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction defintion\">\n                                <h3><span className=\"text-purple\">Complex Instuctions</span> are</h3>\n                                <div className=\"instruction-body\">\n                                    <ul>\n                                        <li>Made of <span className=\"text-purple\">multiple</span> simple instructions. A simple instruction performs a single action or query\n                                            you'd ask a virtual assistance (e.g., send text message or check the weather).</li>\n                                        <li>Executed in a specific <span className=\"text-purple\">order</span>: in sequences, upon conditions, or run in loops.</li>\n                                        <li>Ideally, we want instructions that will require a human more than a single mobile app action or a Goole search to complete</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"instruction examples\">\n                                <div className=\"row\">\n                                    <Carousel variant=\"dark\" interval=\"10000\">\n                                        <Carousel.Item className=\"instruction-example positive-example\">\n                                            <div className=\"vertical-center-container\">\n                                                <div className=\"vertical-center\">\n                                                    <div className=\"example-title utterance-text text-center\"><span className=\"text-green bi bi-check\" />Archive every unread email from Amazon and Zillow in my inbox</div>\n                                                    <div className=\"example-caption text-green\">\n                                                        <div><span className=\"bold\">Is complex</span> since it incorporates 2 simple virtual assistant instructions:\n                                                            <ol>\n                                                                <li>Archive every unread email from Amazon</li>\n                                                                <li>Archive every unread email from Zillow</li>\n                                                            </ol>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Carousel.Item>\n                                        <Carousel.Item className=\"instruction-example positive-example\">\n                                            <div className=\"vertical-center-container\">\n                                                <div className=\"vertical-center\">\n                                                    <div className=\"example-title utterance-text text-center\"><span className=\"text-green bi bi-check\" />Get directions to the Eagles game if they play home today</div>\n                                                    <div className=\"example-caption text-green\">\n                                                        <div><span className=\"bold\">Is complex:</span>\n                                                            <ol>\n                                                                <li>Check the Eagles games schedule whether they play home today</li>\n                                                                <li>If the answer to (1) is positive, then get directions to the team's game</li>\n                                                                <li>To perform (2), it should also get the location of the Eagles game (i.e., the actual stadium address)</li>\n                                                            </ol>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Carousel.Item>\n                                        <Carousel.Item className=\"instruction-example negative-example\">\n                                            <div className=\"vertical-center-container\">\n                                                <div className=\"vertical-center\">\n                                                    <div className=\"example-title utterance-text text-center\"><span className=\"text-red bi bi-x\" />Remind me to submit my essay at 11:00pm</div>\n                                                    <div className=\"example-caption text-red\">\n                                                        <div><span className=\"bold\">Is not complex</span>. This is a simple instruction that performs a single action</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Carousel.Item>\n                                        <Carousel.Item className=\"instruction-example negative-example\">\n                                            <div className=\"vertical-center-container\">\n                                                <div className=\"vertical-center\">\n                                                    <div className=\"example-title utterance-text text-center\"><span className=\"text-red bi bi-x\" />Tell me if tomorrow is Groundhog Day</div>\n                                                    <div className=\"example-caption text-red\">\n                                                        <div><span className=\"bold\">Is not complex</span>. This is a simple instruction that performs a single action</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Carousel.Item>\n                                    </Carousel>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-8\">\n                            <div className=\"instruction\">\n                                <h3>Interesting!</h3>\n                                <div className=\"instruction-body\">\n                                    <p>Think about real-life scenarios where you could use this ideal virtual assistance in your favor.</p>\n                                    <p>Don't try to “test” the system’s intelligence, but rather try to come up with information-dependant\n                                        instructions for actual real-world needs and scenarios.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Diverse</h3>\n                                <div className=\"instruction-body\">\n                                    <p>Think of instructions that express commands and queries in different domains.\n                                        Your final complex instruction can also be comprised of different domains.</p>\n                                    <ul>\n                                        <li><span className=\"text-purple bold\">Commands</span> are instructions ordering something to be done</li>\n                                        <li><span className=\"text-purple bold\">Queries</span> are information-seeking instructions. Feel free to include  <span className=\"text-purple\">\n                                            specifics</span> (e.g., \"the yellow ...\", \"every\", \"earliest\", etc), <span className=\"text-purple\">conditions</span> or <span className=\"text-purple\">\n                                                aggregation operations</span> (count, sum, min, max,\n                                            average), whenever relevant</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"domains\">\n                                        <p>Think about complex commands in the following domains:</p>\n                                        <div className=\"utterance-text\">\n                                            <div className=\"domain-example\"><span className=\"bi bi-cloud-sun\" />Weather information,</div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-truck\" />travel and navigation, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-envelope\" />mail, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-geo\" />events information, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-google\" />general knowledge, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-cart\" />shopping, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-chat\" />messaging, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-bookmark\" />reminders, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-calendar-date\" />schedule, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-house\" />smart home, </div>\n                                            <div className=\"domain-example\"><span className=\"bi bi-heart-pulse\" />health and nutrition, and more apps</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Can be done by a virtual assistant</h3>\n                                <p className=\"instruction-body\">Think of instructions that are hard, but are possible for a virtual assistant\n                                    to perform. As a rule of thumb, if a virtual assistant (like Siri or Alexa) can do each of the simple\n                                    instructions that make the complex instruction, then it is valid.</p>\n\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"instruction-example\">\n                                        <div className=\"example-title utterance-text\"><span className=\"example-icon bi bi-close\" />Get me the phone number of the most popular nanny\n                                            in my area that is available tonight</div>\n                                        <div className=\"example-caption text-red\">This instruction cannot be done as the data required to complete it is not available - one may\n                                            argue that there is no reliable source of the most popular nannies. Even if there was a reliable source, it is not easily\n                                            accessible for virutal assistants.\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5 ambiguity\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Unambiguous</h3>\n                                <p className=\"instruction-body\">A person can clearly understand the intents within the instruction.</p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"ambiguity-examples\">\n                                <Carousel variant=\"dark\" interval=\"10000\">\n                                    <Carousel.Item className=\"instruction-example positive-example\">\n                                        <div className=\"vertical-center-container\">\n                                            <div className=\"vertical-center\">\n                                                <div className=\"example-title utterance-text text-center\"><span className=\"text-red bi bi-x\" />If it is safe to travel to Barcelona\n                                                    then book me a ticket for next week</div>\n                                                <div className=\"example-caption text-red\">\n                                                    <div><span className=\"bold\">Ambiguous</span> because <span className=\"utterance-text\">\"safe\"</span> is not clearly defined. Safe to walk? Safe from health\n                                                        or crime perspectives? Safe for elder people?</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Carousel.Item>\n                                    <Carousel.Item className=\"instruction-example positive-example\">\n                                        <div className=\"vertical-center-container\">\n                                            <div className=\"vertical-center\">\n                                                <div className=\"example-title utterance-text text-center\"><span className=\"text-red bi bi-x\" />Remind me to feed the cat at 8am tomorrow in case I have evening meetings </div>\n                                                <div className=\"example-caption text-red\">\n                                                    <div><span className=\"bold\">Ambiguous</span> because <span className=\"utterance-text\">\"8am tomorrow\"</span> can be understood as the time to feed the cat, but\n                                                        it can also be understood as the time to switch the reminder on.</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Carousel.Item>\n                                </Carousel>\n                            </div>\n                        </div>\n                    </div>\n\n                    {onClickBack && onClickNext &&\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button } from 'react-bootstrap';\n\n\nconst MyVerticallyCenteredModal = (props) => {\n    return (\n        <Modal\n            {...props}\n            size=\"xl\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            animation={false}\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    <div className=\"text-center\"><i className=\"bi bi-life-preserver\"></i></div>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {props.children}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default class AppModal extends React.Component {\n    render() {\n        const { show, onHide, children } = this.props;\n\n        return (\n            <div className=\"help\">\n                <MyVerticallyCenteredModal show={show} onHide={onHide}>\n                    {children}\n                </MyVerticallyCenteredModal>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport AppModal from '../Modal';\nimport Instructions from '../instructions/Instructions';\nimport './Utterance.scss';\n\n\nexport default class Utterance extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, context, contexts, intents } = props;\n        this.state = {\n            utterance,\n            context: context || this.getRandomContext(contexts),\n            domains: intents\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n        this.handleSwitchContextClick = this.handleSwitchContextClick.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            let { utterance } = this.props;\n            utterance = utterance || \"\";\n            this.setState({ utterance });\n        }\n    }\n\n    handleTextAreaChange(event) {\n        const { index, utteranceLimit, disableTextOverflow, onUtteranceChange } = this.props;\n        const { context } = this.state;\n        const utterance = event.target.value;\n        const newUtterance = !disableTextOverflow || utterance.length <= utteranceLimit ? utterance : (this.state.utterance || \"\");\n        this.setState({ utterance: newUtterance });\n        onUtteranceChange && onUtteranceChange(index, utterance, context);\n    }\n\n    handleSwitchContextClick() {\n        const { contexts } = this.props;\n        const context = this.getRandomContext(contexts);\n        this.setState({ context });\n    }\n\n    getRandomContext(contexts) {\n        const context = contexts[Math.floor(Math.random() * contexts.length)];\n        const { onContextChange } = this.props;\n        onContextChange && onContextChange(context);\n        return context;\n    }\n\n    isUtteranceValid() {\n        const { intents, conjunctionWords } = this.props;\n        const { utterance } = this.state;\n        const conjunctionWords2 = conjunctionWords.reduce((prevVal, w) => (prevVal.concat(w['verification'] || [w['display']])), [])\n        const hasUtterance = Boolean(utterance && utterance.trim().length > 0)\n        const hasConjunctionWords = Boolean(conjunctionWords2 && conjunctionWords2.length > 0)\n        const conjunctionWordsIncluded = (hasUtterance && hasConjunctionWords && conjunctionWords2.filter(w => utterance.toLowerCase().indexOf(w.trim().toLowerCase()) !== -1).length > 0);\n\n        if (!hasUtterance || utterance.split(\" \").length <= 2) {\n            // the utterance is too short\n            this.setState({ valid: false, errorMessage: <span>Please be more creative.</span> })\n            return false;\n        } else if (hasConjunctionWords && !conjunctionWordsIncluded) {\n            // none of the mandaroty conjunctionWords are included\n            this.setState({ valid: false, errorMessage: <span>Please use at least 1 of the following word: <strong>{conjunctionWords.map(w => w['display']).join(\", \")}</strong>.</span> })\n            return false;\n        } else if ((utterance.indexOf(\"?\") >= 0 && utterance.indexOf(\"?\") < utterance.length * 0.5) || utterance.trim().split(\"?\").filter(s => s.length > 0).length > 1) {\n            // the utterance has been phrased as multiple utterances\n            this.setState({ valid: false, errorMessage: <span>Please try to phrase the utterance as a <strong>single</strong> request (and not in multiple phrases).</span> })\n            return false;\n        } else {\n            this.setState({ valid: true });\n            return true;\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n\n        if (this.isUtteranceValid()) {\n            this.props.onClickNext();\n        }\n    }\n\n    handleClickHelp(event) {\n        this.setState({ showHelp: true, });\n    }\n\n    render() {\n        const { index, maxUtterances, utteranceLimit, onClickBack } = this.props;\n        const { domains, utterance, valid, errorMessage, showHelp } = this.state;\n        const titles = [\n            \"Write a complex utterance\",\n            \"Write one more complex utterance\",\n            \"Write another complex utterance\",\n            \"Write one last complex utterance\"\n        ]\n        const title = titles[Math.min(index, titles.length - 1)]\n\n        if (showHelp) {\n            return (\n                <AppModal show={showHelp} onHide={() => this.setState({ showHelp: false })}>\n                    <Instructions />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"utterance px-4 py-5 my-5\">\n                <div className=\"container\">\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <h1 className=\"instruction-header\">{title} <span className=\"text-purple\">({index + 1} / {maxUtterances})</span></h1>\n                        </div>\n                    </div>\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"bd-callout intents-container\">\n                                <p className=\"instruction-body\">Imagine you have the following <span className=\"text-purple bold\">apps</span> on your mobile device.</p>\n\n                                <div className=\"domains\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <table>\n                                                <tbody>\n                                                    {domains.slice(0, 6).map((domain, i) => (\n                                                        <tr key={i} className=\"utterance-text\" data-idx={i}>\n                                                            <td>\n                                                                <span className={`intent-icon bi bi-${domain['icon']}`} />\n                                                                <span>{domain['name']}</span>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        <div className=\"col\">\n                                            <table>\n                                                <tbody>\n                                                    {domains.slice(6).map((domain, i) => (\n                                                        <tr key={i} className=\"utterance-text\" data-idx={i}>\n                                                            <td>\n                                                                <span className={`intent-icon bi bi-${domain['icon']}`} />\n                                                                <span>{domain['name']}</span>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"final-instructions\">\n                                    <p>Please write a <span className=\"text-purple bold\">complex utterance</span> to the ideal virtual assistant,\n                                        which uses queries and commands in the context of these apps.</p>\n                                    <ol>\n                                        <li>A complex utterance is likely to express queries and commands in <span className=\"text-purple\">at least 2 of the apps</span> or in <span className=\"text-purple\">the same app at least twice</span></li>\n                                        <li>Please <span className=\"text-purple\">avoid greeting and politeness</span> (For example, avoid saying <span className=\"utterance-text\">Hello</span>).\n                                            Just get straight to the point</li>\n                                    </ol>\n                                    <p className=\"comment\">Click Help to see the intructions and examples</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3 mb-3\">\n                        <div className=\"col\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"text-center\"><span className=\"intent-icon bi bi-keyboard\" />Write here</h3>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <form className=\"g-3 needs-validation pt-1\" onSubmit={this.handleSubmit} noValidate>\n                                                <div className=\"has-validation\">\n                                                    <label className=\"form-label\" style={{ \"display\": \"none\" }}>Write a complex utterance</label>\n                                                    <textarea className={`intent-textarea utterance-text form-control mb-3 ${(valid === true && \"is-valid\") || (valid === false && \"is-invalid\")}`}\n                                                        rows=\"5\" value={utterance} type=\"text\" id=\"utterance\" aria-describedby=\"help\"\n                                                        onChange={this.handleTextAreaChange} placeholder=\"Type your complex utterance here...\" required>\n                                                    </textarea>\n                                                    <div className=\"p-1 m-1\">\n                                                        <span className={(utterance || \"\").length >= utteranceLimit ? 'text-danger' : ''}>{(utterance || \"\").length}</span> / {utteranceLimit}\n                                                    </div>\n                                                    <div className=\"invalid-feedback\">{errorMessage}</div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"actions float\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickHelp}><i className=\"bi bi-life-preserver\" />Help</button>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const { onClickBack, onClickNext } = this.props;\n\n        return (\n            <div className=\"verification help\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Highlight the task</h3>\n                                <p className=\"instruction body\">You were instructed to use each task at least once but also given the freedome to use\n                                every task more than once. Please help us know exactly how many times you used each task in your new sentence.\n                                We present a counter next to each task - use it to indicate the number of times each task was used.</p>\n                                <p>In this example, we use the virtual assistance task for <span className=\"text-red\">querying the weather</span> twice, and every other task is used once.</p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"intents\">\n                                        <div className=\"intent\"><span className=\"text-red\"><span className=\"intent-icon bi bi-cloud-sun\"/>Will it snow today</span><span className=\"counter bi bi-x\">2</span></div>\n                                        <div className=\"intent\"><span className=\"text-blue\"><span className=\"intent-icon bi bi-bookmark\"/>Set a daily reminder at 6am to exercise</span><span className=\"counter bi bi-x\">1</span></div>\n                                        <div className=\"intent\"><span className=\"text-green\"><span className=\"intent-icon bi bi-alarm\"/>cancel my alarm</span><span className=\"counter bi bi-x\">1</span></div>\n                                    </div>\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"text-center\"><span className=\"intent-icon bi bi-toggles\" /></h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <div className=\"intent-textarea\">\n                                                        If <span className=\"highlight text-red\">it snows today</span> then <span className=\"highlight text-green\">cancel my alarm</span>, \n                                                        if <span className=\"highlight text-red\">it is sunny</span> <span className=\"highlight text-blue\">set a daily reminder at 6am to exercise<span className=\"index\">(2)</span></span>.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {onClickBack && onClickNext &&\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-check-lg\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport AppModal from '../Modal';\nimport Instructions from './Help';\nimport './Verification.scss';\n\nexport const VERIFICATION_STEPS = {\n    intents: 1,\n    contraints: 2\n};\n\nexport default class Verification extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, step, constraintIntents, selectedIntents, selectedConstraints } = props;\n        this.state = {\n            utterance,\n            selectedIntents: selectedIntents || [],\n            selectedConstraints: selectedConstraints || [],\n            step: step || (constraintIntents.length > 0 && selectedIntents && selectedIntents.length > 0 && VERIFICATION_STEPS.contraints) || VERIFICATION_STEPS.intents\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleDecrementCounter = this.handleDecrementCounter.bind(this);\n        this.handleIncrementCounter = this.handleIncrementCounter.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            const { utterance } = this.props;\n            this.setState({ utterance });\n        }\n    }\n\n    handleDecrementCounter(event) {\n        event.preventDefault();\n        const { onSelectIntent, onSelectConstraint } = this.props;\n        const { step, selectedIntents, selectedConstraints } = this.state;\n        const index = parseInt(event.currentTarget.getAttribute('data-index'));\n        if (step === VERIFICATION_STEPS.intents) {\n            const indexToRemove = selectedIntents.indexOf(index);\n            if (indexToRemove !== -1) {\n                selectedIntents.splice(indexToRemove, 1);\n                onSelectIntent(selectedIntents);\n            }\n        } else {\n            const indexToRemove = selectedConstraints.indexOf(index);\n            if (indexToRemove !== -1) {\n                selectedConstraints.splice(indexToRemove, 1);\n                onSelectConstraint(selectedConstraints);\n            }\n        }\n    }\n\n    handleIncrementCounter(event) {\n        event.preventDefault();\n        const { onSelectIntent, onSelectConstraint } = this.props;\n        const { step, selectedIntents, selectedConstraints } = this.state;\n        const index = parseInt(event.currentTarget.getAttribute('data-index'));\n        if (step === VERIFICATION_STEPS.intents) {\n            selectedIntents.push(index);\n            onSelectIntent(selectedIntents);\n        } else {\n            selectedConstraints.push(index);\n            onSelectConstraint(selectedConstraints);\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n        const { constraintIntents, minIntents, minConstraints, onClickNext } = this.props;\n        const { step } = this.state;\n        const valid = this.isValid();\n        if (valid && step === VERIFICATION_STEPS.intents && constraintIntents.length > 0) {\n            this.setState({ step: VERIFICATION_STEPS.contraints, valid, errorMessage: null })\n        } else if (valid) {\n            onClickNext();\n        } else {\n            const errorMessage = step === VERIFICATION_STEPS.intents ?\n                `You have to select every tasks at least once. Click back if you need to update your utterance` :\n                `You have to select at least ${minConstraints} constraints. Click back if you need to update your utterance`;\n            this.setState({ valid, errorMessage });\n        }\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        const { constraintIntents } = this.props;\n        const { step } = this.state;\n        if (step === VERIFICATION_STEPS.contraints || (constraintIntents && constraintIntents.length > 0)) {\n            this.setState({ step: VERIFICATION_STEPS.intents })\n        } else {\n            const { onClickBack } = this.props;\n            onClickBack();\n        }\n    }\n\n    handleClickHelp(event) {\n        event.preventDefault();\n        this.setState({ showHelp: true });\n    }\n\n    isValid() {\n        const { intents, minIntents, minConstraints, softIntentRequirement } = this.props;\n        const { step, selectedIntents, selectedConstraints } = this.state;\n        if (step === VERIFICATION_STEPS.intents) {\n            let valid = selectedIntents && selectedIntents.length >= minIntents;\n            valid = valid && (!softIntentRequirement ? (intents.every((intent, i) => selectedIntents.indexOf(i) >= 0)) : (selectedIntents.length >= minIntents));\n            return valid;\n        } else if (step === VERIFICATION_STEPS.contraints) {\n            let valid = selectedConstraints && selectedConstraints.length >= minConstraints;\n            return valid\n        } else {\n            return false;\n        }\n    }\n\n    getInstruction() {\n        const { minIntents, minConstraints } = this.props;\n        const { step } = this.state;\n        const text = (step === VERIFICATION_STEPS.intents) ?\n            \"Please select the virtual assitance's tasks you used in your utterance\" :\n            \"Please select the virtual assitance's inquiries you used as constraints in your utterance\";\n        const minNum = (step === VERIFICATION_STEPS.intents) ? minIntents : minConstraints;\n        const instruction = (\n            <span>\n                <span className=\"\">{text}</span>\n                <span className=\"\"> (You had to use every task. In addition, you are also allowed to use the same one more than once)</span>\n                <span className=\"\">:</span>\n            </span>\n        );\n        return instruction;\n    }\n\n    render() {\n        const { intents, intentIcons, constraintIntents, constraintIcons, onClickHelp } = this.props;\n        const { utterance, errorMessage, selectedIntents, selectedConstraints, step, showHelp } = this.state;\n        const valid = this.isValid();\n        const instruction = this.getInstruction();\n        const items = step === VERIFICATION_STEPS.intents ? intents : constraintIntents;\n        const intentsCounter = (new Array(intents.length)).fill(0).map((value, index) => selectedIntents.filter(idx => idx === index).length);\n        const constraintsCounter = (new Array((constraintIntents || []).length)).fill(0).map((value, index) => selectedConstraints.filter(idx => idx === index).length);\n        const itemsCounter = step === VERIFICATION_STEPS.intents ? intentsCounter : constraintsCounter;\n        const itemIcons = step === VERIFICATION_STEPS.intents ? intentIcons : constraintIcons;\n\n        if (showHelp) {\n            return (\n                <AppModal show={showHelp} onHide={() => this.setState({ showHelp: false })}>\n                    <Instructions />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"verification\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"instructions-text\">\n                                <h1>Please indicate how many times you used each virtual assitance task in your new sentence</h1>\n                                <p>Reminder: In your rewritten sentence you can use some of the tasks multiple times.</p>\n                            </div>\n                            <div className=\"user-utterance intent text-center\"><p>\"{utterance}\"</p></div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"text-center\"><span className=\"intent-icon bi bi-toggles\" /></h3>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"tasks-verification row mb-3\">\n                                        <div className=\"col\">\n                                            <div className=\"row mb-3\">\n                                                <div className=\"col\">\n                                                    <div className=\"bd-callout\">\n                                                        {items.map((item, i) => (\n                                                            <div className={`form-check pt-1 pb-1 mt-1 mb-1 intent selection ${(itemsCounter[i] > 0) ? \"selected\" : \"\"}`} key={i} data-index={i} >\n                                                                <div className=\"counter-form\">\n                                                                    <div className=\"input-group\">\n                                                                        <span className=\"input-group-btn\">\n                                                                            <button type=\"button\" className=\"btn btn-outline-secondary btn-number\" disabled={itemsCounter[i] === 0} data-type=\"minus\" data-index={i}\n                                                                                onClick={this.handleDecrementCounter}>\n                                                                                <span className=\"bi bi-dash\"></span>\n                                                                            </button>\n                                                                        </span>\n                                                                        <input type=\"text\" name=\"quant[1]\" className=\"form-control input-number\" value={itemsCounter[i]} min=\"1\" max=\"10\" readOnly={true} />\n                                                                        <span className=\"input-group-btn\">\n                                                                            <button type=\"button\" className=\"btn btn-outline-secondary btn-number\" data-type=\"plus\" data-index={i}\n                                                                                onClick={this.handleIncrementCounter}>\n                                                                                <span className=\"bi bi-plus\"></span>\n                                                                            </button>\n                                                                        </span>\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"label form-check-label\" htmlFor=\"flexCheckDefault\">\n                                                                    <div className=\"intent\"><span className={`intent-icon bi bi-${itemIcons[i]}`} />{item}</div>\n                                                                </div>\n                                                            </div>\n                                                        ))}\n                                                        {!valid && (\n                                                            <div className=\"error-messasge text-danger\">{errorMessage}</div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"actions float\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickHelp}><i className=\"bi bi-life-preserver\" />Help</button>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const { onClickBack, onClickNext } = this.props;\n\n        return (\n            <div className=\"selections help\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Highlight the task</h3>\n                                <p className=\"instruction body\">You are requested to highlight using your mouse the part in your\n                                    sentence that corresponds with the displayed task. It is likely that you've change the wording or\n                                    details of the original task - choose the rewritten task in your sentence that stems from that task.</p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <ol className=\"intents\">\n                                        <li className=\"intent text-red\">Will it snow today</li>\n                                        <li className=\"intent text-blue\">Set a daily reminder at 6am to exercise</li>\n                                        <li className=\"intent text-green\">cancel my alarm</li>\n                                    </ol>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"help-instructions\">\n                                <h5>House rules:</h5>\n                                <ul>\n                                    <li>Selections are not allowed to overlap one another (don't worry we will show you your previous selections)</li>\n                                    <li>If you need to adjust your current selection then just try it again</li>\n                                    <li>Don't inclulde conjunction words or panctuation marks in your selection</li>\n                                    <li>That's the final step, so shout out to you for completing the task</li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"text-center\"><span className=\"intent-icon bi bi-mouse2\" /></h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <div className=\"intent-textarea\">\n                                                        If <span className=\"highlight text-red\">it snows today<span className=\"index\">(1)</span></span> then <span className=\"highlight text-green\">cancel my alarm<span className=\"index\">(3)</span></span>, otherwise\n                                                        <span className=\"highlight text-blue\">set a daily reminder at 6am to exercise<span className=\"index\">(2)</span></span>.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {onClickBack && onClickNext &&\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-check-lg\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport AppModal from '../Modal';\nimport Help from './Help';\nimport './Selections.scss';\n\n\nexport const SELECTIONS_STEPS = {\n    intents: 'intents',\n    constraints: 'constraints'\n};\n\nexport default class Selections extends React.Component {\n    constructor(props) {\n        super(props);\n        const { selectIndex, step, intentsSelections, constraintsSelections, selectedIntents, selectedConstraints } = props;\n        this.state = {\n            selectIndex: isNaN(selectIndex) ?\n                0 :\n                (selectIndex !== -1 ?\n                    selectIndex :\n                    (step === SELECTIONS_STEPS.constraints ? selectedConstraints.length - 1 : selectedIntents.length - 1)\n                ),\n            step,\n            intentsSelections: intentsSelections || [],\n            constraintsSelections: constraintsSelections || [],\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     const { selectIndex } = this.props;\n    //     if (selectIndex !== prevState.selectIndex) {\n    //         this.setState({ selectIndex: selectIndex });\n    //     }\n    // }\n\n    handleMouseUp(event) {\n        const { selectIndex, step, intentsSelections, constraintsSelections } = this.state;\n        const { selectionStart, selectionEnd } = this.getSelection();\n        if (this.isSelectionValid({ selectionStart, selectionEnd })) {\n            if (step === SELECTIONS_STEPS.intents) {\n                intentsSelections[selectIndex] = [selectionStart, selectionEnd];\n            } else {\n                constraintsSelections[selectIndex] = [selectionStart, selectionEnd];\n            }\n\n            this.setState({ intentsSelections, constraintsSelections, errorMessage: null });\n            this.props.onSelection(intentsSelections, constraintsSelections, selectIndex);\n        } else {\n            this.setState({ errorMessage: `Please select the part in your utterance that corresponds with the ${step === SELECTIONS_STEPS.intents ? \"task\" : \"query\"}. Your selections cannot overlap other selections` })\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n        const { selectedIntents, selectedConstraints } = this.props;\n        const { selectIndex, step, intentsSelections, constraintsSelections } = this.state;\n\n        if ((step === SELECTIONS_STEPS.intents && !intentsSelections[selectIndex]) ||\n            (step === SELECTIONS_STEPS.constraints && !constraintsSelections[selectIndex])) {\n            this.setState({ errorMessage: `Did you forget to select the part in your utterance that corresponds with the ${step === SELECTIONS_STEPS.intents ? \"task\" : \"query\"}?` });\n            return;\n        }\n\n        const nextIndex = selectIndex + 1;\n        if ((step === SELECTIONS_STEPS.intents && nextIndex < selectedIntents.length) || (step === SELECTIONS_STEPS.constraints && nextIndex < selectedConstraints.length)) {\n            this.setState({ selectIndex: nextIndex });\n        } else if (selectedConstraints && selectedConstraints.length > 0 && step === SELECTIONS_STEPS.intents) {\n            this.setState({ step: SELECTIONS_STEPS.constraints, selectIndex: 0 });\n        } else {\n            this.props.onClickNext();\n        }\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        const { selectedIntents } = this.props\n        const { selectIndex, step } = this.state;\n        const previousIndex = selectIndex - 1;\n        if ((step === SELECTIONS_STEPS.intents && previousIndex >= 0) || (step === SELECTIONS_STEPS.constraints && previousIndex >= 0)) {\n            this.setState({ selectIndex: previousIndex });\n        } else if (step === SELECTIONS_STEPS.constraints) {\n            this.setState({ step: SELECTIONS_STEPS.intents, selectIndex: selectedIntents.length - 1 });\n        } else {\n            this.props.onClickBack();\n        }\n    }\n\n    handleClickHelp(event) {\n        event.preventDefault();\n        this.setState({ showHelp: true });\n    }\n\n    handleReset(event) {\n        event.preventDefault();\n        this.setState({intentsSelections: [], selectIndex: 0})\n    }\n\n    getSelection() {// If it rains remind me to bring a coat and an umbrella\n        const { utterance } = this.props;\n        const selection = window.getSelection();\n        let selectionStart = selection.baseOffset;\n        let selectionEnd = selection.extentOffset;\n\n        if (selection.baseNode !== selection.extentNode) {\n            selectionEnd += selection.baseNode.textContent.length;\n        }\n\n        let currentNode = selection.baseNode.parentNode;\n        let parentNode = currentNode.innerHTML === utterance ? null : currentNode.parentNode;\n        while (parentNode) {\n            let previousSibling = parentNode.childNodes[parentNode.childNodes.length - 1]\n            for (let i = 0; i < parentNode.childNodes.length; i++) {\n                let childNode = parentNode.childNodes[i]\n                if (childNode === currentNode) {\n                    previousSibling = currentNode.previousSibling;\n                }\n            }\n\n            while (previousSibling) {\n                selectionStart += previousSibling.textContent.length;\n                selectionEnd += previousSibling.textContent.length;\n                previousSibling = previousSibling.previousSibling;\n            }\n            parentNode = parentNode.previousSibling;\n        }\n\n        return { selectionStart, selectionEnd };\n    }\n\n    isSelectionValid(selection) {\n        let valid = false;\n        const { selectedIntents, selectedConstraints, allowOverlaps } = this.props;\n        const { selectIndex, step, intentsSelections, constraintsSelections } = this.state;\n        const { selectionStart, selectionEnd } = selection;\n        const valid1 = (selectionStart >= 0) && (selectionEnd > selectionStart) && ((selectionEnd - selectionStart) > 1);\n        const valid2 = allowOverlaps || !selectedIntents || selectedIntents.length === 0 || intentsSelections.reduce((result, value, i) => result && (!value || (step === SELECTIONS_STEPS.intents && selectIndex === i) || selectionStart >= value[1] || selectionEnd <= value[0]), true);\n        const valid3 = allowOverlaps || !selectedConstraints || selectedConstraints.length === 0 || constraintsSelections.reduce((result, value, i) => result && (!value || (step === SELECTIONS_STEPS.constraints && selectIndex === i) || selectionStart >= value[1] || selectionEnd <= value[0]), true);\n        valid = valid || (valid1 && valid2 && valid3);\n        return valid;\n    }\n\n    render() {\n        let { utterance, intents, constraintIntents, selectedIntents, selectedConstraints, intentIcons, constraintIcons, onClickHelp } = this.props;\n        const { selectIndex, step, intentsSelections, constraintsSelections, errorMessage, showHelp } = this.state;\n        selectedConstraints = selectedConstraints || [];\n        const total = step === SELECTIONS_STEPS.intents ? selectedIntents.length : selectedConstraints.length;\n        const intent = step === SELECTIONS_STEPS.intents ? intents[selectedIntents[selectIndex]] : constraintIntents[selectedConstraints[selectIndex]];\n        const icon = selectIndex < intentIcons.length ? intentIcons[selectedIntents[selectIndex]] : constraintIcons[selectedConstraints[selectIndex]];\n        const [selectionStart, selectionEnd] = step === SELECTIONS_STEPS.intents ?\n            (intentsSelections[selectIndex] ? intentsSelections[selectIndex] : [null, null]) :\n            (constraintsSelections[selectIndex] ? constraintsSelections[selectIndex] : [null, null]);\n        const valid = (selectionStart >= 0 && selectionEnd <= utterance.length && selectionEnd > selectionStart);\n        const selectedText = valid ? utterance.substring(selectionStart, selectionEnd) : \"\";\n        const selections = intentsSelections.map((v, i) => [v, 'intent', i]).concat(constraintsSelections.map(v => [v, 'constraint']))\n            .filter(s => !!s)\n            .sort((a, b) => a[0][0] - b[0][0]);\n\n        if (showHelp) {\n            return (\n                <AppModal show={showHelp} onHide={() => this.setState({ showHelp: false })}>\n                    <Help />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"selections\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"instructions-text\">\n                            <h1>Highligh text in your sentence</h1>\n                            <p className>Highlight, with your mouse, the part of text in your sentence that references the following\n                                task ({selectIndex + 1} / {total}):</p>\n                            <div className=\"required-intent text-center\"><span className={`intent-icon bi bi-${icon}`} />{intent}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"card mt-4\">\n                            <div className=\"card-header text-center\">\n                                <h3 className=\"text-center\"><span className=\"intent-icon bi bi-mouse2\" /></h3>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"row mb-3\">\n                                    <div className=\"col\">\n                                        <div className=\"selection-area\">\n                                            <div className=\"form-control p-3 user-utterance\" id=\"utterance-selection\" onMouseUp={this.handleMouseUp} >\n                                                {selections.length > 0 ? selections.map(([selection, type, idx], i) => (\n                                                    <span key={i}>\n                                                        {(i === 0) &&\n                                                            <span>{utterance.substring(0, selection[0])}</span>\n                                                        }\n                                                        <span className={`highlight ${type} ${selectIndex === idx ? \"current\" : \"\"}`}>{utterance.substring(selection[0], selection[1])}</span>\n                                                        <span>{utterance.substring(selection[1], (i + 1) < selections.length ? selections[i + 1][0][0] : utterance.length)}</span>\n                                                    </span>\n                                                )) : utterance}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"row selection mb-3\">\n                                    <div className=\"col\">\n                                        <span className=\"selection-head\">You selected:</span>\n                                        {selectedText &&\n                                            <span className=\"selection-text\">{selectedText}</span>\n                                        }\n                                    </div>\n                                </div>\n\n                                {errorMessage &&\n                                    <div className=\"row selection mb-3\">\n                                        <div className=\"col\">\n                                            <div className=\"text-red\">{errorMessage}</div>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        </div >\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"actions mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                            <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                            <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4\" onClick={this.handleReset}><i className=\"bi bi-arrow-counterclockwise\" />Reset</button>\n                            <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"actions float\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickHelp}><i className=\"bi bi-life-preserver\" />Help</button>\n                </div>\n\n            </div >\n        );\n    }\n}","import React from 'react';\n\nclass Selections extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            feedback: \"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n    }\n\n    handleTextAreaChange(event) {\n        const { onFeedbackChange } = this.props;\n        const feedback = event.target.value;\n        this.setState({ feedback });\n        onFeedbackChange && onFeedbackChange(feedback);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { feedback } = this.state;\n        this.props.onSubmit(feedback);\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        this.props.onClickBack();\n    }\n\n    render() {\n        const { feedback } = this.state;\n\n        return (\n            <div className=\"thank-you\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h2 className=\"text-muted text-center mb-3\">Thank You.</h2>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3 mb-3\">\n                        <div className=\"col\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h4 className=\"text-center\"><span className=\"intent-icon bi bi-megaphone\" />Have any feedback?</h4>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <form className=\"g-3 needs-validation pt-1\" onSubmit={this.handleSubmit} noValidate>\n                                                <div className=\"has-validation\">\n                                                    <textarea className=\"feedback-textarea form-control mb-3\"\n                                                        rows=\"3\" value={feedback} type=\"text\" id=\"feedback-text\" aria-describedby=\"help\"\n                                                        onChange={this.handleTextAreaChange} placeholder=\"Enter your feedback here...\" required>\n                                                    </textarea>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleSubmit}>Finish</button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Selections;","import React from 'react';\nimport Home from './home/Home';\nimport Instructions from './instructions/Instructions';\nimport Utterance from './utterance/Utterance';\nimport Verification, { VERIFICATION_STEPS } from './verification/Verification';\nimport Selections, { SELECTIONS_STEPS } from './selections/Selections';\nimport ThankYou from './ThankYou';\nimport './App.scss';\n\nconst SCREENS = {\n    home: 1,\n    instructions: 2,\n    utterance: 3,\n    selections: 4,\n    verification: 5,\n    end: 6\n}\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        const { intents, constraints } = props;\n        this.state = {\n            currentScreen: SCREENS.home,\n            intentsSelections: intents && new Array(intents.length),\n            constraintsSelections: constraints && new Array(constraints.length),\n            workerResponses: []\n        };\n\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleFeedbackChange = this.handleFeedbackChange.bind(this);\n        this.handleUtteranceChange = this.handleUtteranceChange.bind(this);\n        this.handleSelectIntent = this.handleSelectIntent.bind(this);\n        this.handleSelectConstraint = this.handleSelectConstraint.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    submitToMTurk() {\n        const { intents, constraints } = this.props;\n        const { workerResponses, feedback } = this.state;\n        const workerResponsesValues = []\n        for (const i in workerResponses) {\n            const workerResponse = workerResponses[i]\n            const { utterance, context, selectedIntents, selectedConstraints, intentsSelections, constraintsSelections } = workerResponse;\n            const intentsValue = selectedIntents && selectedIntents.map(index => intents[index]).join(\" | \");\n            const constraintsValue = selectedConstraints && selectedConstraints.map(index => constraints[index]).join(\" | \");\n            const intentsAnnotationsValue = selectedIntents && selectedIntents.map((index, i) => utterance.substring(intentsSelections[i][0], intentsSelections[i][1])).join(\" | \");\n            const constraintsAnnotationsValue = selectedConstraints && selectedConstraints.map((index, i) => utterance.substring(constraintsSelections[i][0], constraintsSelections[i][1])).join(\" | \");\n            const workerResponseValue = {\n                utterance,\n                context,\n                intents: intentsValue,\n                constraints: constraintsValue,\n                intentsAnnotations: intentsAnnotationsValue,\n                constraintsAnnotations: constraintsAnnotationsValue\n            };\n            workerResponsesValues.push(workerResponseValue)\n        }\n        const feedbackValue = feedback;\n\n        document.querySelector('crowd-form').onsubmit = () => {\n            if (document.getElementById('worker-responses')) {\n                document.getElementById('worker-responses').value = JSON.stringify(workerResponsesValues);\n                document.getElementById('worker-feedback').value = feedbackValue;\n            }\n        };\n        document.querySelector('crowd-form').submit();\n    }\n\n    handleClickNext() {\n        const { maxUtterances } = this.props;\n        const { index, currentScreen } = this.state;\n        if (currentScreen === SCREENS.home) {\n            this.setState({ currentScreen: SCREENS.instructions });\n        } else if (currentScreen === SCREENS.instructions) {\n            this.setState({ currentScreen: SCREENS.utterance, index: 0 });\n        } else if (currentScreen === SCREENS.utterance) {\n            this.setState({ currentScreen: (index + 1) === maxUtterances ? SCREENS.end : SCREENS.utterance, index: (index + 1) });\n            // } else if (currentScreen === SCREENS.verification) {\n            //     this.setState({ currentScreen: SCREENS.selections, selectionsStep: SELECTIONS_STEPS.intents, currentSelectionIndex: 0 });\n            // } else if (currentScreen === SCREENS.selections) {\n            //     this.setState({ currentScreen: SCREENS.end });\n        } else if (currentScreen === SCREENS.end) {\n            this.submitToMTurk(this.state);\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickBack() {\n        const { maxUtterances } = this.props;\n        const { currentScreen, index } = this.state;\n        if (currentScreen === SCREENS.instructions) {\n            this.setState({ currentScreen: SCREENS.home });\n        } else if (currentScreen === SCREENS.utterance) {\n            this.setState({ index: Math.max(index - 1, 0), currentScreen: index === 0 ? SCREENS.instructions : SCREENS.utterance });\n        // } else if (currentScreen === SCREENS.verification) {\n        //     this.setState({ index: Math.max(index, 0), currentScreen: index === 0 ? : SCREENS.utterance });\n        // } else if (currentScreen === SCREENS.selections) {\n        //     this.setState({ index: Math.max(index, 0), currentScreen: index === 0 ? : SCREENS.verification, verificationStep: 1 });\n        } else if (currentScreen === SCREENS.end) {\n            this.setState({ currentScreen: SCREENS.utterance, index: (maxUtterances - 1) });\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickHelp() {\n        this.setState({ showHelp: true, });\n    }\n\n    handleFeedbackChange(feedback) {\n        this.setState({ feedback });\n    }\n\n    handleUtteranceChange(index, utterance, context) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = { ...workerResponses[index], ...{ utterance, context, intentsSelections: [], constraintsSelections: [] } };\n        this.setState({ workerResponses });\n    }\n\n    handleSelectIntent(index, itemsCounter) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = { ...workerResponses[index], ...{ selectedIntents: itemsCounter, intentsSelections: [] } };\n        this.setState({ workerResponses });\n    }\n\n    handleSelectConstraint(index, itemsCounter) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = { ...workerResponses[index], ...{ selectedConstraints: itemsCounter, constraintsSelections: [] } };\n        this.setState({ workerResponses });\n    }\n\n    handleSelection(index, intentsSelections, constraintsSelections, currentSelectionIndex) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = { ...workerResponses[index], ...{ intentsSelections, constraintsSelections, currentSelectionIndex } };\n        this.setState({ workerResponses });\n    }\n\n    getDisplayedScreen() {\n        const { maxUtterances, contexts, maxLength, maxLengthPerIntent, minIntents, minConstraints, intents, constraints, conjunctionWords, minConjunctionWords } = this.props;\n        const { currentScreen, index, workerResponses } = this.state;\n        const { utterance, context, selectedIntents, selectedConstraints, intentsSelections, constraintsSelections, selectionsStep, currentSelectionIndex, verificationStep } = workerResponses.length > index ? workerResponses[index] : {};\n        const utteranceLimit = maxLength || maxLengthPerIntent * intents.length || 250;\n\n        if (currentScreen === SCREENS.home) {\n            return (\n                <Home onClickExample={this.handleClickHelp} onClickSkip={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.instructions) {\n            return (\n                <Instructions onClickBack={this.handleClickBack} onClickNext={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.utterance) {\n            return (\n                <Utterance index={index} maxUtterances={maxUtterances} utterance={utterance} \n                    utteranceLimit={utteranceLimit} minIntents={minIntents} minConstraints={minConstraints}\n                    intents={intents} constraints={constraints}\n                    conjunctionWords={conjunctionWords} minConjunctionWords={minConjunctionWords} contexts={contexts} context={context}\n                    onUtteranceChange={this.handleUtteranceChange} onClickBack={this.handleClickBack}\n                    onClickHelp={this.handleClickHelp} onClickNext={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.verification) {\n            return (\n                <Verification index={index} utterance={utterance} step={verificationStep}\n                    minIntents={minIntents} minConstraints={minConstraints}\n                    intents={intents} constraints={constraints}\n                    selectedIntents={selectedIntents} selectedConstraints={selectedConstraints}\n                    onSelectIntent={this.handleSelectIntent} onSelectConstraint={this.handleSelectConstraint}\n                    onClickNext={this.handleClickNext} onClickBack={this.handleClickBack} onClickHelp={this.handleClickHelp} />\n            );\n        } else if (currentScreen === SCREENS.selections) {\n            return (\n                <Selections index={index} utterance={utterance}\n                    intents={intents} constraints={constraints}\n                    selectedIntents={selectedIntents} selectedConstraints={selectedConstraints}\n                    intentsSelections={intentsSelections} constraintsSelections={constraintsSelections}\n                    step={selectionsStep} selectionIndex={currentSelectionIndex}\n                    onSelection={this.handleSelection} onClickNext={this.handleClickNext}\n                    onClickBack={this.handleClickBack} onClickHelp={this.handleClickHelp} />\n            );\n        } else if (currentScreen === SCREENS.end) {\n            return (\n                <ThankYou onFeedbackChange={this.handleFeedbackChange}\n                    onSubmit={this.handleClickNext} onClickBack={this.handleClickBack} />\n            );\n        }\n    }\n\n    render() {\n        const displayedScreen = this.getDisplayedScreen();\n        return (\n            <div className=\"utterances\">\n                <div className=\"container\">\n                    <main>\n                        {displayedScreen}\n                    </main>\n                </div>\n            </div>\n        );\n    }\n}","import Main from './utterances4/App';\nimport './App.css';\n\nconst App = ({ id, maxUtterances, context, contexts, intents, minIntents, constraints, minConstraints, conjunctionWords, linkWordIdx, minConjunctionWords, quantifiers, quantifierIdx, maxLength, maxLengthPerIntent }) => {\n  return (\n    <div className=\"App\">\n      <Main id={id} context={context} contexts={contexts} maxUtterances={maxUtterances}\n            intents={intents} minIntents={minIntents} constraints={constraints} minConstraints={minConstraints}\n            conjunctionWords={conjunctionWords} minConjunctionWords={minConjunctionWords} linkWordIdx={linkWordIdx} \n            quantifiers={quantifiers} quantifierIdx={quantifierIdx}\n            maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst getData = (attribute, id='root') => {\n  const value = document.getElementById(id).getAttribute(attribute);\n  return value && !value.startsWith(\"${\") ? value : null;\n};\n\nconst id = getData('data-id');\nconst maxUtterances = getData('data-max-utterances') ? parseInt(getData('data-max-utterances')) : 1;\nconst context = getData('data-context');\nconst contexts = getData('data-contexts') ? getData('data-contexts').split(\"|\").map(context => context.trim()) : [];\nconst intentNames = getData('data-intents') ? getData('data-intents').split(\"|\").filter(x => x && x.length > 0).map(intent => intent.trim()) : [];\nconst intentIcons = getData('data-intent-icons') ? getData('data-intent-icons').split(\"|\").filter(x => x && x.length > 0).map(icon => icon.trim()) : [];\nconst minIntents = getData('data-min-intents') && parseInt(getData('data-min-intents'));\nconst constraintNames = getData('data-constraints') ? getData('data-constraints').split(\"|\").filter(x => x && x.length > 0).map(intent => intent.trim()) : [];\nconst constraintIcons = getData('data-constraint-icons') ? getData('data-constraint-icons').split(\"|\").filter(x => x && x.length > 0).map(icon => icon.trim()) : [];\nconst minConstraints = getData('data-min-constraints') && parseInt(getData('data-min-constraints'));\nconst conjunctionWords = getData('data-conjunction-words') ? getData('data-conjunction-words').split(\"|\").map(word => ({display: word.trim().split(\":\")[0], verification: word.trim().split(\":\")[1].split(\",\")})) : [];\nconst minConjunctionWords = getData('min-conjunction-words') && parseInt(getData('min-conjunction-words'));\nconst quantifiers = getData('data-quantifiers') ? getData('data-quantifiers').split(\"|\").map(icon => icon.trim()) : [];\nconst maxLength = getData('data-max-length') && parseInt(getData('data-max-length'));\nconst maxLengthPerIntent = getData('data-max-length-per-intent') && parseInt(getData('data-max-length-per-intent'));\nconst intents = [\n  { name: 'General knowledge', icon: 'google' }, { name: 'Weather', icon: 'cloud-sun' }, { name: 'Reminders', icon: 'bookmark' },\n  { name: 'Calendar', icon: 'calendar-date' }, { name: 'Events & Tickets', icon: 'ticket-perforated' }, { name: 'Mail', icon: 'envelope' },\n  { name: 'Messages', icon: 'chat' }, { name: 'Map & Navigation', icon: 'truck' }, { name: 'Shopping', icon: 'cart' },\n  { name: 'Music & Podcasts', icon: 'music-note-beamed' }, { name: 'Smart Home', icon: 'house' }, { name: 'Health & Nutrition', icon: 'heart-pulse' }\n];\nconst constraints = [];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App id={id} context={context} contexts={contexts} maxUtterances={maxUtterances}\n      intents={intents} minIntents={minIntents} constraints={constraints} minConstraints={minConstraints}\n      conjunctionWords={conjunctionWords} minConjunctionWords={minConjunctionWords} quantifiers={quantifiers} \n      maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}