{"version":3,"sources":["utterances2/Instructions.js","utterances2/Utterance.js","utterances2/Verification.js","utterances2/Selections.js","utterances2/ThankYou.js","utterances2/Example.js","utterances2/Help.js","utterances2/App.js","App.js","reportWebVitals.js","index.js"],"names":["Instructions","props","onClickExample","onClickSkip","className","type","onClick","Utterance","utterance","context","contexts","state","getRandomContext","handleClickNext","bind","handleTextAreaChange","handleSwitchContextClick","prevProps","prevState","this","setState","event","utteranceLimit","disableTextOverflow","onUtteranceChange","target","value","newUtterance","length","Math","floor","random","onContextChange","intents","words","wordsIncluded","filter","w","toLowerCase","indexOf","split","trim","valid","errorMessage","some","intent","join","s","preventDefault","isUtteranceValid","onClickNext","minIntents","minConstraints","constraintIntents","icons","constraintIcons","onClickBack","onClickHelp","map","i","data-idx","word","onSubmit","handleSubmit","noValidate","style","rows","id","aria-describedby","onChange","placeholder","required","React","Component","VERIFICATION_STEPS","Verification","step","selectedIntents","selectedConstraints","handleIntentClick","handleConstrainClick","handleClickBack","onSelectIntent","toggleIntent","onSelectConstraint","array","idx","parseInt","currentTarget","getAttribute","splice","isNaN","push","isValid","text","minNum","instruction","getInstruction","items","selectedItems","itemIcons","item","data-index","checked","e","htmlFor","SELECTIONS_STEPS","Selections","index","intentsSelections","constraintsSelections","Array","handleChange","handleMouseUp","getSelection","selectionStart","selectionEnd","onSelection","nextIndex","previousIndex","textarea","document","getElementById","icon","selectedText","substring","onMouseUp","Example","goodUtterance1","badUtterance1","badUtterance2","badUtterance3","badUtterance4","badUtterance5","selectedWords","MyVerticallyCenteredModal","Modal","size","aria-labelledby","animation","centered","Header","Title","Body","children","Footer","Button","onHide","Help","show","SCREENS","App","currentScreen","handleClickHelp","handleUtteranceChange","handleSelectIntent","handleSelectConstraint","handleSelection","contextValue","intentsValue","constraintsValue","intentsAnnotationsValue","selectedIdx","constraintsAnnotationsValue","querySelector","onsubmit","submit","verificationStep","selectionsStep","currentSelectionIndex","submitToMTurk","showHelp","selection","maxLength","maxLengthPerIntent","linkWords","ThankYou","displayedScreen","getDisplayedScreen","linkWordIdx","quantifiers","quantifierIdx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5e6e0814.chunk.js","sourcesContent":["import React from 'react';\n\nconst Instructions = (props) => {\n    const { onClickExample, onClickSkip } = props;\n    return (\n        <div className=\"instructions\">\n            <div className=\"card px-4 py-5 my-5 text-center\">\n                <h1 className=\"display-5 fw-bold\">Instructions</h1>\n                <div className=\"col-lg-6 mx-auto\">\n                    <p className=\"lead mb-2\"> Yoar goal is to write an utterance to your smart virtual assistance. </p>\n                    <p className=\"lead mb-2\">It should be written in plain English. Try to be as specific as possible, original, and creative. \n                        Provide your virtual assistance with just enough information to understand and execute your request. </p>\n                    <p className=\"lead mb-2\">Think about real-life scenarios where you could use this virtual assistance in your favor. </p>\n                    <p className=\"lead mb-4\">Please avoid greetings, politeness, chat openers, or any irrelevant information - you're instructing a virtual assistance so just get straight to the point.\n                    </p>\n                    <div className=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                        <button type=\"button\" className=\"btn btn-primary btn-lg px-4 gap-3\" onClick={onClickExample}>See example</button>\n                        <button type=\"button\" className=\"btn btn-outline-secondary px-4\" onClick={onClickSkip}>Skip</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Instructions;","import React from 'react';\n\nexport default class Utterance extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, context, contexts } = props;\n        this.state = {\n            utterance,\n            context: context || this.getRandomContext(contexts),\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n        this.handleSwitchContextClick = this.handleSwitchContextClick.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            const { utterance } = this.props;\n            this.setState({ utterance });\n        }\n    }\n\n    handleTextAreaChange(event) {\n        const { utteranceLimit, disableTextOverflow, onUtteranceChange } = this.props;\n        const { context } = this.state;\n        const utterance = event.target.value;\n        const newUtterance = !disableTextOverflow || utterance.length <= utteranceLimit ? utterance : (this.state.utterance || \"\");\n        this.setState({ utterance: newUtterance });\n        onUtteranceChange && onUtteranceChange(utterance, context);\n    }\n\n    handleSwitchContextClick() {\n        const { contexts } = this.props;\n        const context = this.getRandomContext(contexts);\n        this.setState({ context });\n    }\n\n    getRandomContext(contexts) {\n        const context = contexts[Math.floor(Math.random() * contexts.length)];\n        const { onContextChange } = this.props;\n        onContextChange && onContextChange(context);\n        return context;\n    }\n\n    isUtteranceValid() {\n        const { intents, words } = this.props;\n        const { utterance } = this.state;\n        const wordsIncluded = (utterance && words && words.length > 0 && words.filter(w => utterance.toLowerCase().indexOf(w.split('(')[0].trim().toLowerCase()) !== -1)) || [];\n\n        if (!utterance || utterance.split(\" \").length <= 2) {\n            // the utterance is too short\n            this.setState({ valid: false, errorMessage: <span>Please be more creative.</span> })\n            return false;\n        } else if (intents.some(intent => utterance.toLowerCase().indexOf(intent.toLowerCase()) >= 0)) {\n            // any of the intents appears as is in the utterance\n            this.setState({ valid: false, errorMessage: <span>Please write a valid request in plain English.</span> })\n            return false;\n        } else if (wordsIncluded.length === 0) {\n            // none of the mandaroty words are included\n            this.setState({ valid: false, errorMessage: <span>Please use at least 1 of the following word: <strong>{words.join(\", \")}</strong>.</span> })\n            return false;\n        } else if ((utterance.indexOf(\"?\") >= 0 && utterance.indexOf(\"?\") < utterance.length * 0.5) || utterance.trim().split(\"?\").filter(s => s.length > 0).length > 1) {\n            // the utterance has been phrased as multiple utterances\n            this.setState({ valid: false, errorMessage: <span>Please try to phrase the utterance as a <strong>single</strong> request (and not in multiple phrases).</span> })\n            return false;\n        } else {\n            this.setState({ valid: true });\n            return true;\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n\n        if (this.isUtteranceValid()) {\n            this.props.onClickNext();\n        }\n    }\n\n    render() {\n        const { utteranceLimit, minIntents, minConstraints, intents, constraintIntents, icons, constraintIcons, words, onClickBack, onClickHelp } = this.props;\n        const { utterance, valid, errorMessage, context } = this.state;\n        const description = \"Write an utterance\";\n\n        return (\n            <div className=\"utterance px-4 py-5 my-5\">\n\n                <div className=\"container\">\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <h5 className=\"text-center\">Requirements</h5>\n                        </div>\n                    </div>\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"bd-callout\">\n                                <p>\n                                    <span className=\"\">Write an utterance that uses {minIntents} or more of the following tasks your virtual assitance can do for you</span>\n                                    <span className=\"text-muted\"> (use as many as possible)</span>\n                                    <span className=\"\">:</span>\n                                </p>\n                                {intents.map((intent, i) => (\n                                    <h5 key={i} className=\"intent\" data-idx={i}>\n                                        <span className={`intent-icon bi bi-${icons[i]}`} />\n                                        <span>{intent}</span>\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"bd-callout\">\n                                <p>\n                                    <span className=\"\">In your utterance, constrain the tasks you previously choosed (any or all) with {minConstraints} or more queries your virtual assitance can do for you</span>\n                                    <span className=\"text-muted\"> (use as many as possible)</span>\n                                    <span className=\"\">:</span>\n                                </p>\n                                {constraintIntents.map((intent, i) => (\n                                    <h5 key={i} className=\"intent\" data-idx={i}>\n                                        <span className={`intent-icon bi bi-${constraintIcons[i]}`} />\n                                        <span>{intent}</span>\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    {(words && words.length > 0) &&\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"bd-callout bd-callout-yellow2\">\n                                    <p>\n                                        <span className=\"text-muted\">Please use at least 1 of the following word{words.length > 1 ? \"s\" : \"\"} in your utterance:</span>\n                                    </p>\n                                    <div className=\"pl-1 pr-1\">{words && words.map((word, i) =>\n                                        (<span className=\"word\" key={i}>{word}</span>)\n                                    )}</div>\n                                </div>\n                            </div>\n                        </div>\n                    }\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"bd-callout context\">\n                                <p className=\"text-muted\">To help your creativity, we suggest a context for your utterance (optional):</p>\n                                <button className=\"btn btn-outline-default\" onClick={this.handleSwitchContextClick}>Switch context</button>\n                                <h5>{context}</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card mt-4\">\n                    <div className=\"card-header text-center\">\n                        Write an utterance\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <form className=\"g-3 needs-validation pt-4\" onSubmit={this.handleSubmit} noValidate>\n                                    <div className=\"has-validation mb-3\">\n                                        <label className=\"form-label\" style={{ \"display\": \"none\" }}>{description}</label>\n                                        <textarea className={`form-control ${(valid === true && \"is-valid\") || (valid === false && \"is-invalid\")}`}\n                                            rows=\"5\" value={utterance} type=\"text\" id=\"utterance\" aria-describedby=\"help\"\n                                            onChange={this.handleTextAreaChange} placeholder=\"Type your utterance here...\" required>\n                                        </textarea>\n                                        <div className=\"p-1 m-1\">\n                                            <span className={(utterance || \"\").length >= utteranceLimit ? 'text-danger' : ''}>{(utterance || \"\").length}</span> / {utteranceLimit}\n                                        </div>\n                                        <div className=\"invalid-feedback\">{errorMessage}</div>\n                                        <div id=\"help\" className=\"form-text text-muted\">Don't forget to use <strong>the tasks, constraints, and mandatory words</strong> in your utterance</div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n\n                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickHelp}><i className=\"bi bi-question-lg\" /></button>\n                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-check-lg\" /></button>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\n\nexport const VERIFICATION_STEPS = {\n    intents: 1,\n    contraints: 2\n};\n\nexport default class Verification extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, step, selectedIntents, selectedConstraints } = props;\n        this.state = {\n            utterance,\n            selectedIntents: selectedIntents || [],\n            selectedConstraints: selectedConstraints || [],\n            step: step || (selectedIntents && selectedIntents.length > 0 && VERIFICATION_STEPS.contraints) || VERIFICATION_STEPS.intents\n        };\n\n        this.handleIntentClick = this.handleIntentClick.bind(this);\n        this.handleConstrainClick = this.handleConstrainClick.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            const { utterance } = this.props;\n            this.setState({ utterance });\n        }\n    }\n\n    handleIntentClick(event) {\n        const { onSelectIntent } = this.props;\n        const { selectedIntents } = this.state;\n        this.toggleIntent(event, selectedIntents);\n        this.setState({ selectedIntents, errorMessage: null });\n        onSelectIntent && onSelectIntent(selectedIntents);\n    }\n\n    handleConstrainClick(event) {\n        const { onSelectConstraint } = this.props;\n        const { selectedConstraints } = this.state;\n        this.toggleIntent(event, selectedConstraints);\n        this.setState({ selectedConstraints, errorMessage: null });\n        onSelectConstraint && onSelectConstraint(selectedConstraints);\n    }\n\n    toggleIntent(event, array) {\n        const idx = parseInt(event.currentTarget.getAttribute('data-index'));\n        if (array.indexOf(idx) >= 0) {\n            array.splice(array.indexOf(idx), 1)\n        } else if (!isNaN(idx)) {\n            array.push(idx);\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n        const { minIntents, minConstraints, onClickNext } =this.props; \n        const { step } = this.state; \n        const valid = this.isValid();\n        if (valid && step === VERIFICATION_STEPS.intents) {\n            this.setState({ step: VERIFICATION_STEPS.contraints, valid, errorMessage: null })\n        } else if (valid) {\n            onClickNext();\n        } else {\n            const errorMessage = step === VERIFICATION_STEPS.intents ? \n                `You have to select at least ${minIntents} tasks. Click back if you need to update your utterance` : \n                `You have to select at least ${minConstraints} constraints. Click back if you need to update your utterance`;\n            this.setState({ valid, errorMessage });\n        }\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        const { step } = this.state;\n        if (step === VERIFICATION_STEPS.contraints) {\n            this.setState({ step: VERIFICATION_STEPS.intents })\n        } else {\n            const { onClickBack } = this.props;\n            onClickBack();\n        }\n    }\n\n    isValid() {\n        const { minIntents, minConstraints } =this.props;\n        const { step, selectedIntents, selectedConstraints } = this.state;\n        if (step === VERIFICATION_STEPS.intents && selectedIntents && selectedIntents.length >= minIntents) {\n            return true;\n        } else if (step === VERIFICATION_STEPS.contraints && selectedConstraints && selectedConstraints.length >= minConstraints) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getInstruction() {\n        const { minIntents, minConstraints } = this.props;\n        const { step } = this.state;\n        const text = (step === VERIFICATION_STEPS.intents) ?\n            \"Please select the virtual assitance's tasks you used in your utterance\" :\n            \"Please select the virtual assitance's inquiries you used as constraints in your utterance\";\n        const minNum = (step === VERIFICATION_STEPS.intents) ? minIntents : minConstraints;\n        const instruction = (\n            <span>\n                <span className=\"\">{text}</span>\n                <span className=\"\"> (you had to use at least {minNum})</span>\n                <span className=\"\">:</span>\n            </span>\n        );\n        return instruction;\n    }\n\n    render() {\n        const { intents, icons, constraintIntents, constraintIcons, onClickHelp } = this.props;\n        const { utterance, errorMessage, selectedIntents, selectedConstraints, step } = this.state;\n        const valid = this.isValid();\n        const instruction = this.getInstruction();\n        const items = step === VERIFICATION_STEPS.intents ? intents : constraintIntents;\n        const selectedItems = step === VERIFICATION_STEPS.intents ? selectedIntents : selectedConstraints;\n        const itemIcons = step === VERIFICATION_STEPS.intents ? icons : constraintIcons;\n\n        return (\n            <div className=\"verification px-4 py-5 my-5\">\n                <div className=\"card mt-4\">\n                    <div className=\"card-header text-center\">\n                        {instruction}\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"tasks-verification row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"row mb-3\">\n                                    <div className=\"col\">\n                                        <div className=\"bd-callout\">\n                                            <div className=\"utterance text-center\"><p>{utterance}</p></div>\n                                            {items.map((item, i) => (\n                                                <div key={i}>\n                                                    <div className={`form-check pt-1 pb-1 mt-1 mb-1 intent selection ${(selectedItems.indexOf(i) >= 0) ? \"selected\" : \"\"}`}\n                                                        data-index={i}\n                                                        onClick={step === VERIFICATION_STEPS.intents ? this.handleIntentClick : this.handleConstrainClick}>\n                                                        <input className=\"form-check-input\" type=\"checkbox\" checked={selectedItems.indexOf(i) >= 0} id={`intent${i}`} data-index={i} onChange={e => {}} />\n                                                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                                                            <h5><span className={`intent-icon bi bi-${itemIcons[i]}`} />{item}</h5>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                            {!valid && (\n                                                <div className=\"error-messasge text-danger\">{errorMessage}</div>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n\n                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickHelp}><i className=\"bi bi-question-lg\" /></button>\n                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\n\nexport const SELECTIONS_STEPS = {\n    intents: 'intents',\n    constraints: 'constraints'\n};\n\nexport default class Selections extends React.Component {\n    constructor(props) {\n        super(props);\n        const { index, step, intentsSelections, constraintsSelections, intents, constraintIntents, selectedIntents, selectedConstraints } = props;\n        this.state = {\n            index: isNaN(index) ?\n                0 :\n                (index !== -1 ?\n                    index :\n                    (step === SELECTIONS_STEPS.constraints ? selectedConstraints.length - 1 : selectedIntents.length - 1)\n                ),\n            step,\n            intentsSelections: intentsSelections && intentsSelections.length === intents.length ? intentsSelections : new Array(intents.length),\n            constraintsSelections: constraintsSelections && constraintsSelections.length === constraintIntents.length ? constraintsSelections : new Array(constraintIntents.length),\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     const { index } = this.props;\n    //     if (index !== prevState.index) {\n    //         this.setState({ index: index });\n    //     }\n    // }\n\n    handleChange(event) {\n        event.preventDefault();\n    }\n\n    handleMouseUp() {\n        const { selectedIntents, selectedConstraints } = this.props;\n        const { index, step, intentsSelections, constraintsSelections } = this.state;\n        const { selectionStart, selectionEnd } = this.getSelection();\n        if (selectionStart >= 0 && selectionEnd > selectionStart) {\n            if (step === SELECTIONS_STEPS.intents) {\n                intentsSelections[selectedIntents[index]] = [selectionStart, selectionEnd];\n            } else {\n                constraintsSelections[selectedConstraints[index]] = [selectionStart, selectionEnd];\n            }\n\n            this.setState({ intentsSelections, constraintsSelections, errorMessage: null });\n            this.props.onSelection(intentsSelections, constraintsSelections, index);\n        } else {\n            this.setState({ errorMessage: `Please select the part in your utterance that corresponds with the ${step === SELECTIONS_STEPS.intents ? \"task\" : \"query\"}.` })\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n        const { selectedIntents, selectedConstraints } = this.props;\n        const { index, step, intentsSelections, constraintsSelections } = this.state;\n\n        if ((step === SELECTIONS_STEPS.intents && !intentsSelections[selectedIntents[index]]) ||\n            (step === SELECTIONS_STEPS.constraints && !constraintsSelections[selectedConstraints[index]])) {\n            this.setState({ errorMessage: `Did you forget to select the part in your utterance that corresponds with the ${step === SELECTIONS_STEPS.intents ? \"task\" : \"query\"}?` });\n            return;\n        }\n\n        const nextIndex = index + 1;\n        if ((step === SELECTIONS_STEPS.intents && nextIndex < selectedIntents.length) || (step === SELECTIONS_STEPS.constraints && nextIndex < selectedConstraints.length)) {\n            this.setState({ index: nextIndex });\n        } else if (step === SELECTIONS_STEPS.intents) {\n            this.setState({ step: SELECTIONS_STEPS.constraints, index: 0 });\n        } else {\n            this.props.onClickNext();\n        }\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        const { selectedIntents } = this.props\n        const { index, step } = this.state;\n        const previousIndex = index - 1;\n        if ((step === SELECTIONS_STEPS.intents && previousIndex >= 0) || (step === SELECTIONS_STEPS.constraints && previousIndex >= 0)) {\n            this.setState({ index: previousIndex });\n        } else if (step === SELECTIONS_STEPS.constraints) {\n            this.setState({ step: SELECTIONS_STEPS.intents, index: selectedIntents.length - 1 });\n        } else {\n            this.props.onClickBack();\n        }\n    }\n\n    getSelection() {\n        const textarea = document.getElementById(\"utterance-selection\");\n        const selectionStart = textarea && textarea.selectionStart;\n        const selectionEnd = textarea && textarea.selectionEnd;\n        return { selectionStart, selectionEnd };\n    }\n\n    render() {\n        const { utterance, intents, constraintIntents, selectedIntents, selectedConstraints, icons, constraintIcons, onClickHelp } = this.props;\n        const { index, step, intentsSelections, constraintsSelections, errorMessage } = this.state;\n        const intent = step === SELECTIONS_STEPS.intents ? intents[selectedIntents[index]] : constraintIntents[selectedConstraints[index]];\n        const icon = index < icons.length ? icons[selectedIntents[index]] : constraintIcons[selectedConstraints[index]];\n        const [selectionStart, selectionEnd] = step === SELECTIONS_STEPS.intents ?\n            (intentsSelections[selectedIntents[index]] ? intentsSelections[selectedIntents[index]] : [null, null]) :\n            (constraintsSelections[selectedConstraints[index]] ? constraintsSelections[selectedConstraints[index]] : [null, null]);\n        const valid = (selectionStart >= 0 && selectionEnd <= utterance.length && selectionEnd > selectionStart);\n        const selectedText = valid ? utterance.substring(selectionStart, selectionEnd) : \"\";\n\n        return (\n            <div className=\"selections\">\n                <div className=\"card mt-4\">\n                    <div className=\"card-header text-center\">\n                        <h5>Highlight, with your mouse, the part of text in your utterance that references:</h5>\n                        <h5 className=\"intent\">\n                            <span className={`intent-icon bi bi-${icon}`} />\n                            <span>{intent}</span>\n                        </h5>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <form className=\"g-3 needs-validation pt-4\" onSubmit={this.handleSubmit} noValidate>\n                                    <textarea className=\"form-control p-3 utterance\" rows=\"5\"\n                                        value={utterance} type=\"text\" id=\"utterance-selection\" aria-describedby=\"help\"\n                                        style={{ \"cursor\": \"text\", \"border\": \"none\" }}\n                                        onChange={this.handleChange} onMouseUp={this.handleMouseUp} />\n                                </form>\n                            </div>\n                        </div>\n\n                        <div className=\"row selection mb-3\">\n                            <div className=\"col\">\n                                <span className=\"selection-head\">You selected:</span>\n                                {selectedText &&\n                                    <span className=\"selection-text\">{selectedText}</span>\n                                }\n                            </div>\n                        </div>\n\n                        {errorMessage &&\n                            <div className=\"row selection mb-3\">\n                                <div className=\"col\">\n                                    <div className=\"text-red\">{errorMessage}</div>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div >\n\n                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickHelp}><i className=\"bi bi-question-lg\" /></button>\n                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                </div>\n\n\n                {/* <div className=\"container\">\n                    <div className=\"card text-dark border-primary mb-3\">\n                        <div className=\"card-header text-white bg-primary\">Select, with your mouse, the part in the text in your utterance that references <strong>\"{intent}\"</strong>:</div>\n                        <div className=\"card-body p-0\">\n                            <p className=\"card-text\">\n                                <textarea className=\"form-control p-3\" rows=\"5\"\n                                    value={utterance} type=\"text\" id=\"utterance-selection\" aria-describedby=\"help\"\n                                    style={{ \"cursor\": \"text\", \"border\": \"none\" }}\n                                    onChange={this.handleChange} onMouseUp={this.handleMouseUp} />\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"card text-dark bg-light mb-3\">\n                        <div className=\"card-header\">You selected:</div>\n                        <div className=\"card-body\">\n                            <p className=\"card-text\">{selectedText}</p>\n                        </div>\n                    </div>\n                    <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                        <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chveron-left\" /></button>\n                        <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickHelp}><i className=\"bi bi-question-lg\" /></button>\n                        <button type=\"button\" className=\"btn btn-green btn-lg px-4\" onClick={this.handleClickNext} disabled={disabled}><i className=\"bi bi-chveron-right\" /></button>\n                    </div>\n                </div> */}\n\n            </div >\n        );\n    }\n}","import React from 'react';\n\nclass Selections extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.onSubmit();\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        this.props.onClickBack();\n    }\n\n    render() {\n        return (\n            <div className=\"thank-you\">\n                <div className=\"container\">\n                    <h2 className=\"text-muted text-center mb-3\">Thank You.</h2>\n                    <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                        <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                        <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleSubmit}>Finish</button>\n                    </div>\n\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Selections;","import React from 'react';\n\n\nexport default class Example extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goodUtterance1: \"If it rains tomorrow then remind me tonight to bring an umbrella and text John to bring an umbrella\",\n            badUtterance1: \"If it rains tomorrow then remind me tonight to bring an umbrella\",\n            badUtterance2: \"Remind me tonight to bring an umbrella. Text John I will meet him at the bar\",\n            badUtterance3: \"Hello, how are you? Remind me to bring an umbrella\",\n            badUtterance4: \"It will rain tomorrow and John want to go to the rally, text him the time to be there\",\n            badUtterance5: \"If it rains send a message\",\n            intents: [\"Delete something on your calendar\", \"Send a text message to anyone on your contact list\", \"Create a reminder\"],\n            selectedIntents: [1, 2],\n            minIntents: 1,\n            icons: [\"calendar\", \"chat\", \"bell\"],\n            constraintIntents: [\"Inquire on the duration of driving to somewhere\", \"Check weather conditions\", \"Check your text messages\"],\n            selectedConstraints: [1],\n            minConstraints: 1,\n            constraintIcons: [\"map\", \"sun\", \"chat\"],\n            words: [\"if\", \"provided that\", \"because\", \"In case\", \"Unless\"],\n            selectedWords: [0],\n            context: \"office\"\n        };\n    }\n\n    render() {\n        const { goodUtterance1, badUtterance1, badUtterance2, badUtterance3, badUtterance4, badUtterance5, intents, minIntents, icons, constraintIntents,\n            minConstraints, constraintIcons, words, context, selectedConstraints, selectedIntents, selectedWords } = this.state;\n\n        return (\n            <div className=\"example utterance\">\n                <div className=\"container\">\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <div className=\"bd-callout\">\n                                <p>\n                                    <span className=\"\">Write an utterance that uses {minIntents} or more of the following tasks your virtual assitance can do for you</span>\n                                    <span className=\"text-muted\"> (use as many as possible)</span>\n                                    <span className=\"\">:</span>\n                                </p>\n                                {intents.map((intent, i) => (\n                                    <h5 key={i} className={`intent selection ${selectedIntents.indexOf(i) !== -1 ? \"selected\" : \"\"}`} data-idx={i}>\n                                        <span className={`intent-icon bi bi-${icons[i]}`} />\n                                        <span>{intent}</span>\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"col help\">\n                            <div>\n                                <p>1. We will present a group of tasks for you to choose from. In your utterance, these will be the tasks you will order your virtual assistance to do for you</p>\n                                <p className=\"hint text-muted\">We selected two for the example</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <div className=\"bd-callout\">\n                                <p>\n                                    <span className=\"\">In your utterance, constraint the tasks you previously choosed (any or all) with {minConstraints} or more queries your virtual assitance can do for you</span>\n                                    <span className=\"text-muted\"> (use as many as possible)</span>\n                                    <span className=\"\">:</span>\n                                </p>\n                                {constraintIntents.map((intent, i) => (\n                                    <h5 key={i} className={`intent selection ${selectedConstraints.indexOf(i) !== -1 ? \"selected\" : \"\"}`} data-idx={i}>\n                                        <span className={`intent-icon bi bi-${constraintIcons[i]}`} />\n                                        <span>{intent}</span>\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"col help\">\n                            <div>\n                                <p>2. We will sometimes ask you to constraint the execution of the tasks (all or part) you selected. Choose the queries that will help you virtual assistance to decide whether to excute the tasks or not.</p>\n                                <p className=\"hint text-muted\">We selected one for the example</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    {(words && words.length > 0) &&\n                        <div className=\"row mb-5\">\n                            <div className=\"col\">\n                                <div className=\"bd-callout bd-callout-yellow2\">\n                                    <p>\n                                        <span className=\"text-muted\">Please use at least 1 of the following word{words.length > 1 ? \"s\" : \"\"} in your utterance:</span>\n                                    </p>\n                                    <div className=\"pl-1 pr-1\">{words && words.map((word, i) =>\n                                        (<span className={`word selection ${selectedWords.indexOf(i) !== -1 ? \"selected\" : \"\"}`} key={i}>{word}</span>)\n                                    )}</div>\n                                </div>\n                            </div>\n                            <div className=\"col help\">\n                                <div>\n                                    <p>3. To help you write rich utterances we ask you to use any of the given words</p>\n                                    <p className=\"hint text-muted\">We selected one for the example</p>\n                                </div>\n                            </div>\n                        </div>\n                    }\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <div className=\"bd-callout context\">\n                                <p className=\"text-muted\">To help your creativity, we suggest a context for your utterance (optional):</p>\n                                <h5>{context}</h5>\n                            </div>\n                        </div>\n                        <div className=\"col help\"><p>4. In your utternace, you can use the suggested context or ignore it if you think of a better one</p></div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <h4 className=\"text-center\">Writing the utterance</h4>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <textarea className=\"form-control is-valid\"\n                                rows=\"5\" value={goodUtterance1} type=\"text\" id=\"utterance\" aria-describedby=\"help\">\n                            </textarea>\n                        </div>\n                        <div className=\"col help\"><p>Good example: this utterance uses 1 constraint to condition the exection of 2 of the selected tasks, while including mandatory word.</p></div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <textarea className=\"form-control is-invalid\"\n                                rows=\"5\" value={badUtterance1} type=\"text\" id=\"utterance\" aria-describedby=\"help\">\n                            </textarea>\n                        </div>\n                        <div className=\"col help\"><p>Bad example: This example just uses a single task (a minimum of 2 is required).</p></div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <textarea className=\"form-control is-invalid\"\n                                rows=\"5\" value={badUtterance2} type=\"text\" id=\"utterance\" aria-describedby=\"help\">\n                            </textarea>\n                        </div>\n                        <div className=\"col help\"><p>Bad example: Does not use any of the constraints, and does not use any of the mandatory words (minimum of 1 is required).</p></div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <textarea className=\"form-control is-invalid\"\n                                rows=\"5\" value={badUtterance3} type=\"text\" id=\"utterance\" aria-describedby=\"help\">\n                            </textarea>\n                        </div>\n                        <div className=\"col help\"><p>Bad example: Avoid greetings and politeness.</p></div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <textarea className=\"form-control is-invalid\"\n                                rows=\"5\" value={badUtterance4} type=\"text\" id=\"utterance\" aria-describedby=\"help\">\n                            </textarea>\n                        </div>\n                        <div className=\"col help\"><p>Bad example: Avoid irrelevant information - updating the virtual assistance on the weather and your friend's intensions (going to the rally) is irrelevant. Be specific and straight to the point! </p></div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <textarea className=\"form-control is-invalid\"\n                                rows=\"5\" value={badUtterance5} type=\"text\" id=\"utterance\" aria-describedby=\"help\">\n                            </textarea>\n                        </div>\n                        <div className=\"col help\"><p>Bad example: Missing required information. Don't expect your virtual assistance to guess. When will it rain? Who should it send a message and what message? </p></div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Example from './Example';\nimport { Button } from 'react-bootstrap';\n\n\nconst MyVerticallyCenteredModal = (props) => {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            animation={false}\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Help: Writing an utterance (with examples)\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {props.children}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default class Help extends React.Component {\n    render() {\n        const { show, onHide } = this.props;\n\n        return (\n            <div className=\"help\">\n                <MyVerticallyCenteredModal show={show} onHide={onHide}>\n                    <Example />\n                </MyVerticallyCenteredModal>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Instructions from './Instructions';\nimport Utterance from './Utterance';\nimport Verification, { VERIFICATION_STEPS } from './Verification';\nimport Selections, { SELECTIONS_STEPS } from './Selections';\nimport ThankYou from './ThankYou';\nimport Help from './Help';\nimport './App.css';\n\nconst SCREENS = {\n    instructions: 1,\n    example: 2,\n    utterance: 3,\n    selections: 4,\n    verification: 5,\n    end: 6\n}\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        const { intents, constraintIntents } = props;\n        this.state = {\n            currentScreen: SCREENS.instructions,\n            intentsSelections: new Array(intents.length),\n            constraintsSelections: new Array(constraintIntents.length),\n        };\n\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleUtteranceChange = this.handleUtteranceChange.bind(this);\n        this.handleSelectIntent = this.handleSelectIntent.bind(this);\n        this.handleSelectConstraint = this.handleSelectConstraint.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    submitToMTurk() {\n        const { intents, constraintIntents } = this.props;\n        const { utterance, context, selectedIntents, selectedConstraints, intentsSelections, constraintsSelections } = this.state;\n        const contextValue = context;\n        const intentsValue = selectedIntents.map(index => intents[index]).join(\" | \");\n        const constraintsValue = selectedConstraints.map(index => constraintIntents[index]).join(\" | \");\n        const intentsAnnotationsValue = selectedIntents.map(selectedIdx => utterance.substring(intentsSelections[selectedIdx][0], intentsSelections[selectedIdx][1])).join(\" | \");\n        const constraintsAnnotationsValue = selectedConstraints.map(selectedIdx => utterance.substring(constraintsSelections[selectedIdx][0], constraintsSelections[selectedIdx][1])).join(\" | \");\n        document.querySelector('crowd-form').onsubmit = () => {\n            if (document.getElementById('utterance')) {\n                document.getElementById('context').value = contextValue;\n                document.getElementById('utterance').value = utterance;\n                document.getElementById('intents').value = intentsValue;\n                document.getElementById('constraints').value = constraintsValue;\n                document.getElementById('intents-annotations').value = intentsAnnotationsValue;\n                document.getElementById('constraints-annotations').value = constraintsAnnotationsValue;\n            }\n        };\n        document.querySelector('crowd-form').submit();\n    }\n\n    handleClickNext() {\n        const { currentScreen } = this.state;\n        if (currentScreen === SCREENS.instructions) {\n            this.setState({ currentScreen: SCREENS.utterance });\n        } else if (currentScreen === SCREENS.utterance) {\n            this.setState({ currentScreen: SCREENS.verification, verificationStep: VERIFICATION_STEPS.intents });\n        } else if (currentScreen === SCREENS.verification) {\n            this.setState({ currentScreen: SCREENS.selections, selectionsStep: SELECTIONS_STEPS.intents, currentSelectionIndex: 0 });\n        } else if (currentScreen === SCREENS.selections) {\n            this.setState({ currentScreen: SCREENS.end });\n        } else if (currentScreen === SCREENS.end) {\n            this.submitToMTurk(this.state);\n        }\n    }\n\n    handleClickBack() {\n        const { currentScreen } = this.state;\n        if (currentScreen === SCREENS.utterance) {\n            this.setState({ currentScreen: SCREENS.instructions });\n        } else if (currentScreen === SCREENS.verification) {\n            this.setState({ currentScreen: SCREENS.utterance });\n        } else if (currentScreen === SCREENS.selections) {\n            this.setState({ currentScreen: SCREENS.verification, verificationStep: 2 });\n        } else if (currentScreen === SCREENS.end) {\n            this.setState({ currentScreen: SCREENS.selections, selectionsStep: SELECTIONS_STEPS.constraints, currentSelectionIndex: -1 });\n        }\n    }\n\n    handleClickHelp() {\n        this.setState({ showHelp: true, });\n    }\n\n    handleUtteranceChange(utterance, context) {\n        this.setState({ utterance, context });\n    }\n\n    handleSelectIntent(items) {\n        const { intentsSelections } = this.state;\n        this.setState({ selectedIntents: items, intentsSelections: intentsSelections.map((selection, i) => (items.indexOf(i) !== -1 ? selection : null)) });\n    }\n\n    handleSelectConstraint(items) {\n        const { constraintsSelections } = this.state;\n        this.setState({ selectedConstraints: items, constraintsSelections: constraintsSelections.map((selection, i) => (items.indexOf(i) !== -1 ? selection : null)) });\n    }\n\n    handleSelection(intentsSelections, constraintsSelections, currentSelectionIndex) {\n        this.setState({ intentsSelections, constraintsSelections, currentSelectionIndex });\n    }\n\n    getDisplayedScreen() {\n        const { contexts, maxLength, maxLengthPerIntent, minIntents, minConstraints, intents, constraintIntents, icons, constraintIcons, linkWords } = this.props;\n        const { currentScreen, utterance, context, selectedIntents, selectedConstraints, intentsSelections, constraintsSelections, selectionsStep, currentSelectionIndex, verificationStep } = this.state;\n        const words = linkWords;\n        const utteranceLimit = maxLength || maxLengthPerIntent * intents.length || 250;\n\n        if (currentScreen === SCREENS.instructions) {\n            return (\n                <Instructions onClickExample={this.handleClickHelp} onClickSkip={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.utterance) {\n            return (\n                <Utterance utterance={utterance}\n                    utteranceLimit={utteranceLimit} minIntents={minIntents} minConstraints={minConstraints}\n                    intents={intents} constraintIcons={constraintIcons}\n                    constraintIntents={constraintIntents} icons={icons}\n                    words={words} contexts={contexts} context={context}\n                    onUtteranceChange={this.handleUtteranceChange}\n                    onClickNext={this.handleClickNext} onClickBack={this.handleClickBack} onClickHelp={this.handleClickHelp} />\n            );\n        } else if (currentScreen === SCREENS.verification) {\n            return (\n                <Verification utterance={utterance} step={verificationStep}\n                    minIntents={minIntents} minConstraints={minConstraints}\n                    intents={intents} constraintIntents={constraintIntents}\n                    icons={icons} constraintIcons={constraintIcons}\n                    selectedIntents={selectedIntents} selectedConstraints={selectedConstraints}\n                    onSelectIntent={this.handleSelectIntent} onSelectConstraint={this.handleSelectConstraint}\n                    onClickNext={this.handleClickNext} onClickBack={this.handleClickBack} onClickHelp={this.handleClickHelp} />\n            );\n        } else if (currentScreen === SCREENS.selections) {\n            return (\n                <Selections utterance={utterance}\n                    intents={intents} constraintIntents={constraintIntents}\n                    icons={icons} constraintIcons={constraintIcons}\n                    selectedIntents={selectedIntents} selectedConstraints={selectedConstraints}\n                    intentsSelections={intentsSelections} constraintsSelections={constraintsSelections}\n                    step={selectionsStep} index={currentSelectionIndex}\n                    onSelection={this.handleSelection}\n                    onClickNext={this.handleClickNext} onClickBack={this.handleClickBack} onClickHelp={this.handleClickHelp} />\n            );\n        } else if (currentScreen === SCREENS.end) {\n            return (\n                <ThankYou onSubmit={this.handleClickNext} onClickBack={this.handleClickBack} />\n            );\n        }\n    }\n\n    render() {\n        const { showHelp } = this.state;\n        const displayedScreen = this.getDisplayedScreen();\n        return (\n            <div className=\"utterances\">\n                <div className=\"container\">\n                    <main>\n                        {displayedScreen}\n                        {showHelp &&\n                            <Help show={showHelp} onHide={() => this.setState({ showHelp: false })} />\n                        }\n                    </main>\n                </div>\n            </div>\n        );\n    }\n}","import Main from './utterances2/App';\nimport './App.css';\n\nconst App = ({ id, context, contexts, intents, icons, minIntents, constraintIntents, constraintIcons, minConstraints, linkWords, linkWordIdx, quantifiers, quantifierIdx, maxLength, maxLengthPerIntent }) => {\n  return (\n    <div className=\"App\">\n      <Main id={id} context={context} contexts={contexts} \n            intents={intents} icons={icons} minIntents={minIntents}\n            constraintIntents={constraintIntents} constraintIcons={constraintIcons} minConstraints={minConstraints}\n            linkWords={linkWords} linkWordIdx={linkWordIdx} \n            quantifiers={quantifiers} quantifierIdx={quantifierIdx}\n            maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst id = document.getElementById('root').getAttribute('data-id');\nconst context = document.getElementById('root').getAttribute('data-context');\nconst contexts = document.getElementById('root').getAttribute('data-contexts').split(\"|\").map(context => context.trim());\nconst intents = document.getElementById('root').getAttribute('data-intents').split(\"|\").map(intent => intent.trim());\nconst icons = document.getElementById('root').getAttribute('data-intent-icons').split(\"|\").map(icon => icon.trim());\nconst minIntents = parseInt(document.getElementById('root').getAttribute('data-min-intents'));\nconst constraintIntents = document.getElementById('root').getAttribute('data-constraints').split(\"|\").map(intent => intent.trim());\nconst constraintIcons = document.getElementById('root').getAttribute('data-constraint-icons').split(\"|\").map(icon => icon.trim());\nconst minConstraints = parseInt(document.getElementById('root').getAttribute('data-min-constraints'));\nconst linkWords = document.getElementById('root').getAttribute('data-link-words').split(\"|\").map(icon => icon.trim());\nconst quantifiers = document.getElementById('root').getAttribute('data-quantifiers').split(\"|\").map(icon => icon.trim());\nconst maxLength = parseInt(document.getElementById('root').getAttribute('data-max-length'));\nconst maxLengthPerIntent = parseInt(document.getElementById('root').getAttribute('data-max-length-per-intent'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App id={id} context={context} contexts={contexts}\n      intents={intents} icons={icons} minIntents={minIntents}\n      constraintIntents={constraintIntents} constraintIcons={constraintIcons} minConstraints={minConstraints}\n      linkWords={linkWords} quantifiers={quantifiers} \n      maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}