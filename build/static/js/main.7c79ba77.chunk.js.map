{"version":3,"sources":["utterances3/home/Home.js","utterances3/instructions/Instructions.js","utterances3/Modal.js","utterances3/utterance/Utterance.js","utterances3/verification/Help.js","utterances3/verification/Verification.js","utterances3/selections/Help.js","utterances3/selections/Selections.js","utterances3/ThankYou.js","utterances3/App.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","onClickExample","onClickSkip","className","steps","loop","Infinity","wrapper","type","onClick","Instructions","this","onClickBack","onClickNext","React","Component","MyVerticallyCenteredModal","Modal","size","aria-labelledby","animation","centered","Header","Title","id","Body","children","Footer","Button","onHide","AppModal","show","Utterance","utterance","context","contexts","state","getRandomContext","handleClickNext","bind","handleClickHelp","handleTextAreaChange","handleSwitchContextClick","prevProps","prevState","setState","event","utteranceLimit","disableTextOverflow","onUtteranceChange","target","value","newUtterance","length","Math","floor","random","onContextChange","words","intents","words2","reduce","prevVal","w","concat","wordsIncluded","filter","toLowerCase","indexOf","trim","split","valid","errorMessage","map","join","s","preventDefault","isUtteranceValid","showHelp","minWords","minIntents","minConstraints","icons","constraintIntents","constraintIcons","onClickHelp","intent","i","data-idx","word","onSubmit","handleSubmit","noValidate","style","rows","aria-describedby","onChange","placeholder","required","VERIFICATION_STEPS","Verification","step","selectedIntents","selectedConstraints","handleClickBack","handleDecrementCounter","handleIncrementCounter","onSelectIntent","onSelectConstraint","index","parseInt","currentTarget","getAttribute","indexToRemove","splice","push","isValid","every","text","items","getInstruction","intentsCounter","Array","fill","idx","constraintsCounter","itemsCounter","itemIcons","item","data-index","disabled","data-type","name","min","max","readOnly","htmlFor","SELECTIONS_STEPS","Selections","intentsSelections","constraintsSelections","isNaN","handleMouseUp","getSelection","selectionStart","selectionEnd","isSelectionValid","onSelection","nextIndex","previousIndex","selection","window","baseOffset","extentOffset","baseNode","extentNode","textContent","currentNode","parentNode","innerHTML","previousSibling","childNodes","valid1","valid2","result","valid3","total","icon","selectedText","substring","selections","v","sort","onMouseUp","SCREENS","App","currentScreen","handleUtteranceChange","handleSelectIntent","handleSelectConstraint","handleSelection","contextValue","intentsValue","constraintsValue","intentsAnnotationsValue","constraintsAnnotationsValue","document","querySelector","onsubmit","getElementById","submit","verificationStep","selectionsStep","currentSelectionIndex","submitToMTurk","scrollTo","maxLength","maxLengthPerIntent","linkWords","ThankYou","displayedScreen","getDisplayedScreen","linkWordIdx","quantifiers","quantifierIdx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getData","attribute","x","display","verification","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7c79ba77.chunk.js","sourcesContent":["import React from 'react';\nimport Typical from 'react-typical';\nimport './Home.scss';\n\n\nconst Home = (props) => {\n    const { onClickExample, onClickSkip } = props;\n    return (\n        <div className=\"home\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <div className=\"vertical-center-container\">\n                            <div className=\"vertical-center jumbotron\">\n                                <h1>Rewrite to a single sentence</h1>\n                                <p>Your goal in this task is to rewrite a series of distinct virtual assistance tasks in a single sentence</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-6\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                            <div className=\"text-center example-text\"><i className=\"bi bi-robot\"></i>Virtual assistance tasks</div>\n                                <div className=\"intents\">\n                                    <li className=\"intent\">\n                                        <span className=\"intent-icon bi bi-bookmark\" />\n                                        <span>Create a reminder to bring a hat</span>\n                                    </li>\n                                    <li className=\"intent\">\n                                        <span className=\"intent-icon bi bi-cloud-sun\" />\n                                        <span>Will it rain tomorrow</span>\n                                    </li>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"text-center example-text\">rewritten in a single sentence</div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"text-center\"><span className=\"intent-icon bi bi-stars\" /></h3>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <div className=\"row\">\n                                            <div className=\"col\">\n                                                <div className=\"example vertical-center-container\">\n                                                    <div className=\"vertical-center\">\n                                                        <div className=\"intent-textarea text-center\">\n                                                            <Typical\n                                                                steps={[\n                                                                    'If it rains tomorrow then remind me to bring a coat', 5000\n                                                                ]}\n                                                                loop={Infinity}\n                                                                wrapper=\"p\"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row mb-3\">\n                    <div className=\"col\">\n                        <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                            <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickSkip}>\n                                Start\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport './Instructions.scss';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const { onClickBack, onClickNext } = this.props;\n\n        return (\n            <div className=\"instructions help\">\n                <div className=\"container\">\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <h1>Instructions</h1>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Virtual assistance tasks</h3>\n                                <p className=\"instruction body\">We will present you with a series of virtual assistance tasks.\n                                    You will be asked to rewrite these tasks to a single sentence.</p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <ol className=\"intents\">\n                                        <li className=\"intent\">Will it snow today</li>\n                                        <li className=\"intent\">Set a daily reminder at 6am to exercise</li>\n                                        <li className=\"intent\">cancel my alarm</li>\n                                    </ol>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Use conjunction words</h3>\n                                <p className=\"instruction body\">To connect the tasks together, it is required to use at least 1 of the following conjunction words.\n                                    In addition, you may use the same word multiple times, or synonym and antonym words.</p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"words\">\n                                        <span className=\"word\">if</span>\n                                        <span className=\"word\">unless</span>\n                                        <span className=\"word\">in the event</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Rewrite the tasks to a single coherent sentence</h3>\n                                <p>Please use <span className=\"purple\">every listed task at least once</span>.\n                                    The new sentence should <span className=\"purple\">make sense</span> as much as possible.</p>\n                                <p>In the new sentence, the different tasks should be related to one another, it will likely\n                                    require you to <span className=\"purple\">change the wording or even some details</span> in\n                                    the original tasks. We encourage you to change the details such that the newly rewritten tasks \n                                    will <span className=\"purple\">share the same details</span> (e.g., location, time, names, etc).\n                                    The new sentence should <span className=\"purple\">make sense</span> as much as possible.</p>\n                                <p>The new sentence is also required to be <span className=\"purple\">panctuated</span> and <span className=\"purple\">\n                                    grammatically correct</span> (even if the original tasks showed poor grammar).</p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"text-center\"><span className=\"intent-icon bi bi-keyboard\" /></h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <div className=\"intent-textarea\">\n                                                        If <span className=\"highlight\">it snows today</span> then <span className=\"highlight\">cancel my alarm</span>, or else\n                                                        <span className=\"highlight\">set a daily reminder at 6am to exercise</span>.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>A better example</h3>\n                                <p className=\"instruction body\">Not only this example uses all the tasks. Some tasks are used more than once and the details\n                                    of the extra task were changed such that the newly rewritten sentence makes more sense (exercising if it is sunny).\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"card good-example\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"text-center\"><span className=\"intent-icon bi bi-emoji-sunglasses\" /></h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <div className=\"intent-textarea\">\n                                                        If <span className=\"highlight\">it snows today</span> then <span className=\"highlight\">cancel my alarm</span>,\n                                                        if <span className=\"highlight\">it is sunny tomorrow</span>, <span className=\"highlight\">set a daily reminder at 6am to exercise</span>.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>A bad example</h3>\n                                <p>This example demonstrates what can go wrong:</p>\n                                <ul>\n                                    <li>It does not use all of the above tasks</li>\n                                    <li>None of the conjunction words are included</li>\n                                    <li>Avoid greetings and politeness</li>\n                                    <li>The newly rewritten sentence is not coherent, doesn't use panctuations, and just doesn't sound right.</li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"card bad-example\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"text-center\"><span className=\"intent-icon bi bi-emoji-frown\" /></h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <div className=\"intent-textarea\">\n                                                        Hello, How are you? <span className=\"highlight\">When does the rally start?</span><span className=\"highlight\">set a daily reminder at 6am to exercise</span>\n                                                        Thank you.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>We are not perfect</h3>\n                                <p className=\"instruction body\">In some cases the given virtual assistance tasks will not make sense\n                                    to be conjoint together. In these cases we encourage you to change the details of one or more of the tasks such that\n                                    the new sentence will look and sound right. Do this while preserving the general notion of the original task\n                                    (e.g., send a message).\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"example\">\n                                    <ol className=\"intents\">\n                                        <li className=\"intent\">Tell me how long until I get to Tennessee</li>\n                                        <li className=\"intent\">text austin no</li>\n                                    </ol>\n                                    <div className=\"card neutral-example\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"text-center\"><span className=\"intent-icon bi bi-emoji-wink\" /></h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <p className=\"intent-textarea\">\n                                                        If <span className=\"highlight\">it will take more than an hour until I get to Tennessee</span> then <span className=\"highlight\">text Austin that I will be late</span>.\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {onClickBack && onClickNext &&\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button } from 'react-bootstrap';\n\n\nconst MyVerticallyCenteredModal = (props) => {\n    return (\n        <Modal\n            {...props}\n            size=\"xl\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            animation={false}\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    <div className=\"text-center\"><i className=\"bi bi-life-preserver\"></i></div>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {props.children}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default class AppModal extends React.Component {\n    render() {\n        const { show, onHide, children } = this.props;\n\n        return (\n            <div className=\"help\">\n                <MyVerticallyCenteredModal show={show} onHide={onHide}>\n                    {children}\n                </MyVerticallyCenteredModal>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport AppModal from '../Modal';\nimport Instructions from '../instructions/Instructions';\nimport './Utterance.scss';\n\n\nexport default class Utterance extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, context, contexts } = props;\n        this.state = {\n            utterance,\n            context: context || this.getRandomContext(contexts),\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n        this.handleSwitchContextClick = this.handleSwitchContextClick.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            const { utterance } = this.props;\n            this.setState({ utterance });\n        }\n    }\n\n    handleTextAreaChange(event) {\n        const { utteranceLimit, disableTextOverflow, onUtteranceChange } = this.props;\n        const { context } = this.state;\n        const utterance = event.target.value;\n        const newUtterance = !disableTextOverflow || utterance.length <= utteranceLimit ? utterance : (this.state.utterance || \"\");\n        this.setState({ utterance: newUtterance });\n        onUtteranceChange && onUtteranceChange(utterance, context);\n    }\n\n    handleSwitchContextClick() {\n        const { contexts } = this.props;\n        const context = this.getRandomContext(contexts);\n        this.setState({ context });\n    }\n\n    getRandomContext(contexts) {\n        const context = contexts[Math.floor(Math.random() * contexts.length)];\n        const { onContextChange } = this.props;\n        onContextChange && onContextChange(context);\n        return context;\n    }\n\n    isUtteranceValid() {\n        const { intents, words } = this.props;\n        const { utterance } = this.state;\n        const words2 = words.reduce((prevVal, w) => (prevVal.concat(w['verification'] || [w['display']])), [])\n        const wordsIncluded = (utterance && words2 && words2.length > 0 && words2.filter(w => utterance.toLowerCase().indexOf(w.trim().toLowerCase()) !== -1)) || [];\n\n        if (!utterance || utterance.split(\" \").length <= 2) {\n            // the utterance is too short\n            this.setState({ valid: false, errorMessage: <span>Please be more creative.</span> })\n            return false;\n        } else if (wordsIncluded.length === 0) {\n            // none of the mandaroty words are included\n            this.setState({ valid: false, errorMessage: <span>Please use at least 1 of the following word: <strong>{words.map(w => w['display']).join(\", \")}</strong>.</span> })\n            return false;\n        } else if ((utterance.indexOf(\"?\") >= 0 && utterance.indexOf(\"?\") < utterance.length * 0.5) || utterance.trim().split(\"?\").filter(s => s.length > 0).length > 1) {\n            // the utterance has been phrased as multiple utterances\n            this.setState({ valid: false, errorMessage: <span>Please try to phrase the utterance as a <strong>single</strong> request (and not in multiple phrases).</span> })\n            return false;\n        } else {\n            this.setState({ valid: true });\n            return true;\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n\n        if (this.isUtteranceValid()) {\n            this.props.onClickNext();\n        }\n    }\n\n    handleClickHelp(event) {\n        this.setState({ showHelp: true, });\n    }\n\n    render() {\n        const { utteranceLimit, minWords, minIntents, minConstraints, intents, constraintIntents, icons, constraintIcons, words, onClickBack, onClickHelp } = this.props;\n        const { utterance, valid, errorMessage, showHelp } = this.state;\n        const description = \"Write an utterance\";\n\n        if (showHelp) {\n            return (\n                <AppModal show={showHelp} onHide={() => this.setState({ showHelp: false })}>\n                    <Instructions />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"utterance px-4 py-5 my-5\">\n                <div className=\"container\">\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <h1 className=\"instruction header\">Rewrite tasks in a single sentence</h1>\n                        </div>\n                    </div>\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"bd-callout intents-container\">\n                                <p>\n                                    <span className=\"instruction body\">Rewrite all the following tasks in a single sentence. You can change the original wording and details of the tasks\n                                        to express a clear and coherent writing that makes sense.</span>\n                                </p>\n                                <ol className=\"intents\">\n                                    {intents.map((intent, i) => (\n                                        <li key={i} className=\"intent\" data-idx={i}>\n                                            <span className={`intent-icon bi bi-${icons[i]}`} />\n                                            <span>{intent}</span>\n                                        </li>\n                                    ))}\n                                </ol>\n                                <div className=\"info text-center\">\n                                    <div>You are required to use each of the tasks at least once in your rewritten sentence.</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {(words && words.length > 0) &&\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"bd-callout bd-callout-yellow2\">\n                                    <p>\n                                        <span className=\"instruction body\">In your rewritten sentence, connect the above tasks\n                                            using <span className=\"purple\">{minWords || 1} or more</span> of the following conjunction\n                                            words:</span>\n                                    </p>\n                                    <div className=\"words pl-1 pr-1\">\n                                        {words && words.map((word, i) =>\n                                            (<span className=\"word\" key={i}>{word['display']}</span>)\n                                        )}\n                                    </div>\n                                    <div className=\"info text-center\">\n                                        <div>You may use the same word multiple times, or synonym and antonym words.</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                    <div className=\"row mt-3 mb-3\">\n                        <div className=\"col\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"text-center\"><span className=\"intent-icon bi bi-keyboard\" />Rewrite here</h3>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <form className=\"g-3 needs-validation pt-1\" onSubmit={this.handleSubmit} noValidate>\n                                                <div className=\"has-validation\">\n                                                    <label className=\"form-label\" style={{ \"display\": \"none\" }}>{description}</label>\n                                                    <textarea className={`intent-textarea form-control mb-3 ${(valid === true && \"is-valid\") || (valid === false && \"is-invalid\")}`}\n                                                        rows=\"5\" value={utterance} type=\"text\" id=\"utterance\" aria-describedby=\"help\"\n                                                        onChange={this.handleTextAreaChange} placeholder=\"Type your new sentence here...\" required>\n                                                    </textarea>\n                                                    <div className=\"p-1 m-1\">\n                                                        <span className={(utterance || \"\").length >= utteranceLimit ? 'text-danger' : ''}>{(utterance || \"\").length}</span> / {utteranceLimit}\n                                                    </div>\n                                                    <div className=\"invalid-feedback\">{errorMessage}</div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n\n                            <div className=\"info text-center\">\n                                <div>Remember: great sentences share some details between the rewritten tasks (e.g., time, place).</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"actions float\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickHelp}><i className=\"bi bi-life-preserver\" />Help</button>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const { onClickBack, onClickNext } = this.props;\n\n        return (\n            <div className=\"verification help\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Highlight the task</h3>\n                                <p className=\"instruction body\">You were instructed to use each task at least once but also given the freedome to use\n                                every task more than once. Please help us know exactly how many times you used each task in your new sentence.\n                                We present a counter next to each task - use it to indicate the number of times each task was used.</p>\n                                <p>In this example, we use the virtual assistance task for <span className=\"text-red\">querying the weather</span> twice, and every other task is used once.</p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"intents\">\n                                        <div className=\"intent\"><span className=\"text-red\"><span className=\"intent-icon bi bi-cloud-sun\"/>Will it snow today</span><span className=\"counter bi bi-x\">2</span></div>\n                                        <div className=\"intent\"><span className=\"text-blue\"><span className=\"intent-icon bi bi-bookmark\"/>Set a daily reminder at 6am to exercise</span><span className=\"counter bi bi-x\">1</span></div>\n                                        <div className=\"intent\"><span className=\"text-green\"><span className=\"intent-icon bi bi-alarm\"/>cancel my alarm</span><span className=\"counter bi bi-x\">1</span></div>\n                                    </div>\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"text-center\"><span className=\"intent-icon bi bi-toggles\" /></h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <div className=\"intent-textarea\">\n                                                        If <span className=\"highlight text-red\">it snows today</span> then <span className=\"highlight text-green\">cancel my alarm</span>, \n                                                        if <span className=\"highlight text-red\">it is sunny</span> <span className=\"highlight text-blue\">set a daily reminder at 6am to exercise<span className=\"index\">(2)</span></span>.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {onClickBack && onClickNext &&\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-check-lg\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport AppModal from '../Modal';\nimport Instructions from './Help';\nimport './Verification.scss';\n\nexport const VERIFICATION_STEPS = {\n    intents: 1,\n    contraints: 2\n};\n\nexport default class Verification extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, step, constraintIntents, selectedIntents, selectedConstraints } = props;\n        this.state = {\n            utterance,\n            selectedIntents: selectedIntents || [],\n            selectedConstraints: selectedConstraints || [],\n            step: step || (constraintIntents.length > 0 && selectedIntents && selectedIntents.length > 0 && VERIFICATION_STEPS.contraints) || VERIFICATION_STEPS.intents\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleDecrementCounter = this.handleDecrementCounter.bind(this);\n        this.handleIncrementCounter = this.handleIncrementCounter.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            const { utterance } = this.props;\n            this.setState({ utterance });\n        }\n    }\n\n    handleDecrementCounter(event) {\n        event.preventDefault();\n        const { onSelectIntent, onSelectConstraint } = this.props;\n        const { step, selectedIntents, selectedConstraints } = this.state;\n        const index = parseInt(event.currentTarget.getAttribute('data-index'));\n        if (step === VERIFICATION_STEPS.intents) {\n            const indexToRemove = selectedIntents.indexOf(index);\n            if (indexToRemove !== -1) {\n                selectedIntents.splice(indexToRemove, 1);\n                onSelectIntent(selectedIntents);\n            }\n        } else {\n            const indexToRemove = selectedConstraints.indexOf(index);\n            if (indexToRemove !== -1) {\n                selectedConstraints.splice(indexToRemove, 1);\n                onSelectConstraint(selectedConstraints);\n            }\n        }\n    }\n\n    handleIncrementCounter(event) {\n        event.preventDefault();\n        const { onSelectIntent, onSelectConstraint } = this.props;\n        const { step, selectedIntents, selectedConstraints } = this.state;\n        const index = parseInt(event.currentTarget.getAttribute('data-index'));\n        if (step === VERIFICATION_STEPS.intents) {\n            selectedIntents.push(index);\n            onSelectIntent(selectedIntents);\n        } else {\n            selectedConstraints.push(index);\n            onSelectConstraint(selectedConstraints);\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n        const { constraintIntents, minIntents, minConstraints, onClickNext } = this.props;\n        const { step } = this.state;\n        const valid = this.isValid();\n        if (valid && step === VERIFICATION_STEPS.intents && constraintIntents.length > 0) {\n            this.setState({ step: VERIFICATION_STEPS.contraints, valid, errorMessage: null })\n        } else if (valid) {\n            onClickNext();\n        } else {\n            const errorMessage = step === VERIFICATION_STEPS.intents ?\n                `You have to select every tasks at least once. Click back if you need to update your utterance` :\n                `You have to select at least ${minConstraints} constraints. Click back if you need to update your utterance`;\n            this.setState({ valid, errorMessage });\n        }\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        const { constraintIntents } = this.props;\n        const { step } = this.state;\n        if (step === VERIFICATION_STEPS.contraints || (constraintIntents && constraintIntents.length > 0)) {\n            this.setState({ step: VERIFICATION_STEPS.intents })\n        } else {\n            const { onClickBack } = this.props;\n            onClickBack();\n        }\n    }\n\n    handleClickHelp(event) {\n        event.preventDefault();\n        this.setState({ showHelp: true });\n    }\n\n    isValid() {\n        const { intents, minIntents, minConstraints } = this.props;\n        const { step, selectedIntents, selectedConstraints } = this.state;\n        if (step === VERIFICATION_STEPS.intents) {\n            let valid = selectedIntents && selectedIntents.length >= minIntents;\n            valid = valid && intents.every((intent, i) => selectedIntents.indexOf(i) >= 0);\n            return valid;\n        } else if (step === VERIFICATION_STEPS.contraints) {\n            let valid = selectedConstraints && selectedConstraints.length >= minConstraints;\n            return valid\n        } else {\n            return false;\n        }\n    }\n\n    getInstruction() {\n        const { minIntents, minConstraints } = this.props;\n        const { step } = this.state;\n        const text = (step === VERIFICATION_STEPS.intents) ?\n            \"Please select the virtual assitance's tasks you used in your utterance\" :\n            \"Please select the virtual assitance's inquiries you used as constraints in your utterance\";\n        const minNum = (step === VERIFICATION_STEPS.intents) ? minIntents : minConstraints;\n        const instruction = (\n            <span>\n                <span className=\"\">{text}</span>\n                <span className=\"\"> (You had to use every task. In addition, you are also allowed to use the same one more than once)</span>\n                <span className=\"\">:</span>\n            </span>\n        );\n        return instruction;\n    }\n\n    render() {\n        const { intents, icons, constraintIntents, constraintIcons, onClickHelp } = this.props;\n        const { utterance, errorMessage, selectedIntents, selectedConstraints, step, showHelp } = this.state;\n        const valid = this.isValid();\n        const instruction = this.getInstruction();\n        const items = step === VERIFICATION_STEPS.intents ? intents : constraintIntents;\n        const intentsCounter = (new Array(intents.length)).fill(0).map((value, index) => selectedIntents.filter(idx => idx === index).length);\n        const constraintsCounter = (new Array((constraintIntents || []).length)).fill(0).map((value, index) => selectedConstraints.filter(idx => idx === index).length);\n        const itemsCounter = step === VERIFICATION_STEPS.intents ? intentsCounter : constraintsCounter;\n        const itemIcons = step === VERIFICATION_STEPS.intents ? icons : constraintIcons;\n\n        if (showHelp) {\n            return (\n                <AppModal show={showHelp} onHide={() => this.setState({ showHelp: false })}>\n                    <Instructions />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"verification\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"instructions-text\">\n                                <h1>Please indicate how many times you used each virtual assitance task in your new sentence</h1>\n                                <p>Reminder: In your rewritten sentence you can use some of the tasks multiple times.</p>\n                            </div>\n                            <div className=\"user-utterance intent text-center\"><p>\"{utterance}\"</p></div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"text-center\"><span className=\"intent-icon bi bi-toggles\" /></h3>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"tasks-verification row mb-3\">\n                                        <div className=\"col\">\n                                            <div className=\"row mb-3\">\n                                                <div className=\"col\">\n                                                    <div className=\"bd-callout\">\n                                                        {items.map((item, i) => (\n                                                            <div className={`form-check pt-1 pb-1 mt-1 mb-1 intent selection ${(itemsCounter[i] > 0) ? \"selected\" : \"\"}`} key={i} data-index={i} >\n                                                                <div className=\"counter-form\">\n                                                                    <div className=\"input-group\">\n                                                                        <span className=\"input-group-btn\">\n                                                                            <button type=\"button\" className=\"btn btn-outline-secondary btn-number\" disabled={itemsCounter[i] === 0} data-type=\"minus\" data-index={i}\n                                                                                onClick={this.handleDecrementCounter}>\n                                                                                <span className=\"bi bi-dash\"></span>\n                                                                            </button>\n                                                                        </span>\n                                                                        <input type=\"text\" name=\"quant[1]\" className=\"form-control input-number\" value={itemsCounter[i]} min=\"1\" max=\"10\" readOnly={true} />\n                                                                        <span className=\"input-group-btn\">\n                                                                            <button type=\"button\" className=\"btn btn-outline-secondary btn-number\" data-type=\"plus\" data-index={i}\n                                                                                onClick={this.handleIncrementCounter}>\n                                                                                <span className=\"bi bi-plus\"></span>\n                                                                            </button>\n                                                                        </span>\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"label form-check-label\" htmlFor=\"flexCheckDefault\">\n                                                                    <div className=\"intent\"><span className={`intent-icon bi bi-${itemIcons[i]}`} />{item}</div>\n                                                                </div>\n                                                            </div>\n                                                        ))}\n                                                        {!valid && (\n                                                            <div className=\"error-messasge text-danger\">{errorMessage}</div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"actions float\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickHelp}><i className=\"bi bi-life-preserver\" />Help</button>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const { onClickBack, onClickNext } = this.props;\n\n        return (\n            <div className=\"selections help\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <div className=\"instruction\">\n                                <h3>Highlight the task</h3>\n                                <p className=\"instruction body\">You are requested to highlight using your mouse the part in your\n                                    sentence that corresponds with the displayed task. It is likely that you've change the wording or\n                                    details of the original task - choose the rewritten task in your sentence that stems from that task.</p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <ol className=\"intents\">\n                                        <li className=\"intent text-red\">Will it snow today</li>\n                                        <li className=\"intent text-blue\">Set a daily reminder at 6am to exercise</li>\n                                        <li className=\"intent text-green\">cancel my alarm</li>\n                                    </ol>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row mb-5\">\n                        <div className=\"col-6\">\n                            <div className=\"help-instructions\">\n                                <h5>House rules:</h5>\n                                <ul>\n                                    <li>Selections are not allowed to overlap one another (don't worry we will show you your previous selections)</li>\n                                    <li>If you need to adjust your current selection then just try it again</li>\n                                    <li>Don't inclulde conjunction words or panctuation marks in your selection</li>\n                                    <li>That's the final step, so shout out to you for completing the task</li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"text-center\"><span className=\"intent-icon bi bi-mouse2\" /></h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <div className=\"intent-textarea\">\n                                                        If <span className=\"highlight text-red\">it snows today<span className=\"index\">(1)</span></span> then <span className=\"highlight text-green\">cancel my alarm<span className=\"index\">(3)</span></span>, otherwise\n                                                        <span className=\"highlight text-blue\">set a daily reminder at 6am to exercise<span className=\"index\">(2)</span></span>.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {onClickBack && onClickNext &&\n                        <div className=\"row mb-3\">\n                            <div className=\"col\">\n                                <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-check-lg\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport AppModal from '../Modal';\nimport Help from './Help';\nimport './Selections.scss';\n\n\nexport const SELECTIONS_STEPS = {\n    intents: 'intents',\n    constraints: 'constraints'\n};\n\nexport default class Selections extends React.Component {\n    constructor(props) {\n        super(props);\n        const { index, step, intentsSelections, constraintsSelections, selectedIntents, selectedConstraints } = props;\n        this.state = {\n            index: isNaN(index) ?\n                0 :\n                (index !== -1 ?\n                    index :\n                    (step === SELECTIONS_STEPS.constraints ? selectedConstraints.length - 1 : selectedIntents.length - 1)\n                ),\n            step,\n            intentsSelections: intentsSelections || [],\n            constraintsSelections: constraintsSelections || [],\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     const { index } = this.props;\n    //     if (index !== prevState.index) {\n    //         this.setState({ index: index });\n    //     }\n    // }\n\n    handleMouseUp(event) {\n        const { index, step, intentsSelections, constraintsSelections } = this.state;\n        const { selectionStart, selectionEnd } = this.getSelection();\n        if (this.isSelectionValid({ selectionStart, selectionEnd })) {\n            if (step === SELECTIONS_STEPS.intents) {\n                intentsSelections[index] = [selectionStart, selectionEnd];\n            } else {\n                constraintsSelections[index] = [selectionStart, selectionEnd];\n            }\n\n            this.setState({ intentsSelections, constraintsSelections, errorMessage: null });\n            this.props.onSelection(intentsSelections, constraintsSelections, index);\n        } else {\n            this.setState({ errorMessage: `Please select the part in your utterance that corresponds with the ${step === SELECTIONS_STEPS.intents ? \"task\" : \"query\"}. Your selections cannot overlap other selections` })\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n        const { selectedIntents, selectedConstraints } = this.props;\n        const { index, step, intentsSelections, constraintsSelections } = this.state;\n\n        if ((step === SELECTIONS_STEPS.intents && !intentsSelections[index]) ||\n            (step === SELECTIONS_STEPS.constraints && !constraintsSelections[index])) {\n            this.setState({ errorMessage: `Did you forget to select the part in your utterance that corresponds with the ${step === SELECTIONS_STEPS.intents ? \"task\" : \"query\"}?` });\n            return;\n        }\n\n        const nextIndex = index + 1;\n        if ((step === SELECTIONS_STEPS.intents && nextIndex < selectedIntents.length) || (step === SELECTIONS_STEPS.constraints && nextIndex < selectedConstraints.length)) {\n            this.setState({ index: nextIndex });\n        } else if (selectedConstraints && selectedConstraints.length > 0 && step === SELECTIONS_STEPS.intents) {\n            this.setState({ step: SELECTIONS_STEPS.constraints, index: 0 });\n        } else {\n            this.props.onClickNext();\n        }\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        const { selectedIntents } = this.props\n        const { index, step } = this.state;\n        const previousIndex = index - 1;\n        if ((step === SELECTIONS_STEPS.intents && previousIndex >= 0) || (step === SELECTIONS_STEPS.constraints && previousIndex >= 0)) {\n            this.setState({ index: previousIndex });\n        } else if (step === SELECTIONS_STEPS.constraints) {\n            this.setState({ step: SELECTIONS_STEPS.intents, index: selectedIntents.length - 1 });\n        } else {\n            this.props.onClickBack();\n        }\n    }\n\n    handleClickHelp(event) {\n        event.preventDefault();\n        this.setState({ showHelp: true });\n    }\n\n    getSelection() {// If it rains remind me to bring a coat and an umbrella\n        const { utterance } = this.props;\n        const selection = window.getSelection();\n        let selectionStart = selection.baseOffset;\n        let selectionEnd = selection.extentOffset;\n\n        if (selection.baseNode !== selection.extentNode) {\n            selectionEnd += selection.baseNode.textContent.length;\n        }\n\n        let currentNode = selection.baseNode.parentNode;\n        let parentNode = currentNode.innerHTML === utterance ? null : currentNode.parentNode;\n        while (parentNode) {\n            let previousSibling = parentNode.childNodes[parentNode.childNodes.length - 1]\n            for (let i = 0; i < parentNode.childNodes.length; i++) {\n                let childNode = parentNode.childNodes[i]\n                if (childNode === currentNode) {\n                    previousSibling = currentNode.previousSibling;\n                }\n            }\n\n            while (previousSibling) {\n                selectionStart += previousSibling.textContent.length;\n                selectionEnd += previousSibling.textContent.length;\n                previousSibling = previousSibling.previousSibling;\n            }\n            parentNode = parentNode.previousSibling;\n        }\n\n        return { selectionStart, selectionEnd };\n    }\n\n    isSelectionValid(selection) {\n        let valid = false;\n        const { selectedIntents, selectedConstraints } = this.props;\n        const { index, step, intentsSelections, constraintsSelections } = this.state;\n        const { selectionStart, selectionEnd } = selection;\n        const valid1 = (selectionStart >= 0) && (selectionEnd > selectionStart) && ((selectionEnd - selectionStart) > 1);\n        const valid2 = !selectedIntents || selectedIntents.length === 0 || intentsSelections.reduce((result, value, i) => result && (!value || (step === SELECTIONS_STEPS.intents && index === i) || selectionStart >= value[1] || selectionEnd <= value[0]), true);\n        const valid3 = !selectedConstraints || selectedConstraints.length === 0 || constraintsSelections.reduce((result, value, i) => result && (!value || (step === SELECTIONS_STEPS.constraints && index === i) || selectionStart >= value[1] || selectionEnd <= value[0]), true);\n        valid = valid || (valid1 && valid2 && valid3);\n        return valid;\n    }\n\n    render() {\n        let { utterance, intents, constraintIntents, selectedIntents, selectedConstraints, icons, constraintIcons, onClickHelp } = this.props;\n        const { index, step, intentsSelections, constraintsSelections, errorMessage, showHelp } = this.state;\n        selectedConstraints = selectedConstraints || [];\n        const total = step === SELECTIONS_STEPS.intents ? selectedIntents.length : selectedConstraints.length;\n        const intent = step === SELECTIONS_STEPS.intents ? intents[selectedIntents[index]] : constraintIntents[selectedConstraints[index]];\n        const icon = index < icons.length ? icons[selectedIntents[index]] : constraintIcons[selectedConstraints[index]];\n        const [selectionStart, selectionEnd] = step === SELECTIONS_STEPS.intents ?\n            (intentsSelections[index] ? intentsSelections[index] : [null, null]) :\n            (constraintsSelections[index] ? constraintsSelections[index] : [null, null]);\n        const valid = (selectionStart >= 0 && selectionEnd <= utterance.length && selectionEnd > selectionStart);\n        const selectedText = valid ? utterance.substring(selectionStart, selectionEnd) : \"\";\n        const selections = intentsSelections.map((v, i) => [v, 'intent', i]).concat(constraintsSelections.map(v => [v, 'constraint']))\n            .filter(s => !!s)\n            .sort();\n\n        if (showHelp) {\n            return (\n                <AppModal show={showHelp} onHide={() => this.setState({ showHelp: false })}>\n                    <Help />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"selections\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"instructions-text\">\n                            <h1>Highligh text in your sentence</h1>\n                            <p className>Highlight, with your mouse, the part of text in your sentence that references the following\n                                task ({index + 1} / {total}):</p>\n                            <div className=\"required-intent text-center\"><span className={`intent-icon bi bi-${icon}`} />{intent}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"card mt-4\">\n                            <div className=\"card-header text-center\">\n                                <h3 className=\"text-center\"><span className=\"intent-icon bi bi-mouse2\" /></h3>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"row mb-3\">\n                                    <div className=\"col\">\n                                        <div className=\"selection-area\">\n                                            <div className=\"form-control p-3 user-utterance\" id=\"utterance-selection\" onMouseUp={this.handleMouseUp} >\n                                                {selections.length > 0 ? selections.map(([selection, type, idx], i) => (\n                                                    <span key={i}>\n                                                        {(i === 0) &&\n                                                            <span>{utterance.substring(0, selection[0])}</span>\n                                                        }\n                                                        <span className={`highlight ${type} ${index === idx && \"current\"}`}>{utterance.substring(selection[0], selection[1])}</span>\n                                                        <span>{utterance.substring(selection[1], (i + 1) < selections.length ? selections[i + 1][0][0] : utterance.length)}</span>\n                                                    </span>\n                                                )) : utterance}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"row selection mb-3\">\n                                    <div className=\"col\">\n                                        <span className=\"selection-head\">You selected:</span>\n                                        {selectedText &&\n                                            <span className=\"selection-text\">{selectedText}</span>\n                                        }\n                                    </div>\n                                </div>\n\n                                {errorMessage &&\n                                    <div className=\"row selection mb-3\">\n                                        <div className=\"col\">\n                                            <div className=\"text-red\">{errorMessage}</div>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        </div >\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"actions mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                            <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                            <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"actions float\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickHelp}><i className=\"bi bi-life-preserver\" />Help</button>\n                </div>\n\n            </div >\n        );\n    }\n}","import React from 'react';\n\nclass Selections extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.onSubmit();\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        this.props.onClickBack();\n    }\n\n    render() {\n        return (\n            <div className=\"thank-you\">\n                <div className=\"container\">\n                    <h2 className=\"text-muted text-center mb-3\">Thank You.</h2>\n                    <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                        <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                        <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleSubmit}>Finish</button>\n                    </div>\n\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Selections;","import React from 'react';\nimport Home from './home/Home';\nimport Instructions from './instructions/Instructions';\nimport Utterance from './utterance/Utterance';\nimport Verification, { VERIFICATION_STEPS } from './verification/Verification';\nimport Selections, { SELECTIONS_STEPS } from './selections/Selections';\nimport ThankYou from './ThankYou';\nimport './App.scss';\n\nconst SCREENS = {\n    home: 1,\n    instructions: 2,\n    utterance: 3,\n    selections: 4,\n    verification: 5,\n    end: 6\n}\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        const { intents, constraintIntents } = props;\n        this.state = {\n            currentScreen: SCREENS.home,\n            intentsSelections: intents && new Array(intents.length),\n            constraintsSelections: constraintIntents && new Array(constraintIntents.length),\n        };\n\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleUtteranceChange = this.handleUtteranceChange.bind(this);\n        this.handleSelectIntent = this.handleSelectIntent.bind(this);\n        this.handleSelectConstraint = this.handleSelectConstraint.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    submitToMTurk() {\n        const { intents, constraintIntents } = this.props;\n        const { utterance, context, selectedIntents, selectedConstraints, intentsSelections, constraintsSelections } = this.state;\n        const contextValue = context;\n        const intentsValue = selectedIntents && selectedIntents.map(index => intents[index]).join(\" | \");\n        const constraintsValue = selectedConstraints && selectedConstraints.map(index => constraintIntents[index]).join(\" | \");\n        const intentsAnnotationsValue = selectedIntents && selectedIntents.map((index, i) => utterance.substring(intentsSelections[i][0], intentsSelections[i][1])).join(\" | \");\n        const constraintsAnnotationsValue = selectedConstraints && selectedConstraints.map((index, i) => utterance.substring(constraintsSelections[i][0], constraintsSelections[i][1])).join(\" | \");\n        document.querySelector('crowd-form').onsubmit = () => {\n            if (document.getElementById('utterance')) {\n                document.getElementById('context').value = contextValue;\n                document.getElementById('utterance').value = utterance;\n                document.getElementById('intents').value = intentsValue;\n                document.getElementById('constraints').value = constraintsValue;\n                document.getElementById('intents-annotations').value = intentsAnnotationsValue;\n                document.getElementById('constraints-annotations').value = constraintsAnnotationsValue;\n            }\n        };\n        document.querySelector('crowd-form').submit();\n    }\n\n    handleClickNext() {\n        const { currentScreen } = this.state;\n        if (currentScreen === SCREENS.home) {\n            this.setState({ currentScreen: SCREENS.instructions });\n        } else if (currentScreen === SCREENS.instructions) {\n            this.setState({ currentScreen: SCREENS.utterance });\n        } else if (currentScreen === SCREENS.utterance) {\n            this.setState({ currentScreen: SCREENS.verification, verificationStep: VERIFICATION_STEPS.intents });\n        } else if (currentScreen === SCREENS.verification) {\n            this.setState({ currentScreen: SCREENS.selections, selectionsStep: SELECTIONS_STEPS.intents, currentSelectionIndex: 0 });\n        } else if (currentScreen === SCREENS.selections) {\n            this.setState({ currentScreen: SCREENS.end });\n        } else if (currentScreen === SCREENS.end) {\n            this.submitToMTurk(this.state);\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickBack() {\n        const { currentScreen } = this.state;\n        if (currentScreen === SCREENS.instructions) {\n            this.setState({ currentScreen: SCREENS.home });\n        } else if (currentScreen === SCREENS.utterance) {\n            this.setState({ currentScreen: SCREENS.instructions });\n        } else if (currentScreen === SCREENS.verification) {\n            this.setState({ currentScreen: SCREENS.utterance });\n        } else if (currentScreen === SCREENS.selections) {\n            this.setState({ currentScreen: SCREENS.verification, verificationStep: 1 });\n        } else if (currentScreen === SCREENS.end) {\n            this.setState({ currentScreen: SCREENS.selections, selectionsStep: SELECTIONS_STEPS.intents, currentSelectionIndex: -1 });\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickHelp() {\n        this.setState({ showHelp: true, });\n    }\n\n    handleUtteranceChange(utterance, context) {\n        this.setState({ utterance, context, intentsSelections: [], constraintsSelections: [] });\n    }\n\n    handleSelectIntent(itemsCounter) {\n        this.setState({ selectedIntents: itemsCounter, intentsSelections: [] });\n    }\n\n    handleSelectConstraint(itemsCounter) {\n        this.setState({ selectedConstraints: itemsCounter, constraintsSelections: [] });\n    }\n\n    handleSelection(intentsSelections, constraintsSelections, currentSelectionIndex) {\n        this.setState({ intentsSelections, constraintsSelections, currentSelectionIndex });\n    }\n\n    getDisplayedScreen() {\n        const { contexts, maxLength, maxLengthPerIntent, minIntents, minConstraints, intents, constraintIntents, icons, constraintIcons, linkWords, minWords } = this.props;\n        const { currentScreen, utterance, context, selectedIntents, selectedConstraints, intentsSelections, constraintsSelections, selectionsStep, currentSelectionIndex, verificationStep } = this.state;\n        const words = linkWords;\n        const utteranceLimit = maxLength || maxLengthPerIntent * intents.length || 250;\n\n        if (currentScreen === SCREENS.home) {\n            return (\n                <Home onClickExample={this.handleClickHelp} onClickSkip={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.instructions) {\n            return (\n                <Instructions onClickBack={this.handleClickBack} onClickNext={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.utterance) {\n            return (\n                <Utterance utterance={utterance}\n                    utteranceLimit={utteranceLimit} minIntents={minIntents} minConstraints={minConstraints}\n                    intents={intents} constraintIcons={constraintIcons}\n                    constraintIntents={constraintIntents} icons={icons}\n                    words={words} minWords={minWords} contexts={contexts} context={context}\n                    onUtteranceChange={this.handleUtteranceChange}\n                    onClickBack={this.handleClickBack} onClickHelp={this.handleClickHelp} onClickNext={this.handleClickNext}  />\n            );\n        } else if (currentScreen === SCREENS.verification) {\n            return (\n                <Verification utterance={utterance} step={verificationStep}\n                    minIntents={minIntents} minConstraints={minConstraints}\n                    intents={intents} constraintIntents={constraintIntents}\n                    icons={icons} constraintIcons={constraintIcons}\n                    selectedIntents={selectedIntents} selectedConstraints={selectedConstraints}\n                    onSelectIntent={this.handleSelectIntent} onSelectConstraint={this.handleSelectConstraint}\n                    onClickNext={this.handleClickNext} onClickBack={this.handleClickBack} onClickHelp={this.handleClickHelp} />\n            );\n        } else if (currentScreen === SCREENS.selections) {\n            return (\n                <Selections utterance={utterance}\n                    intents={intents} constraintIntents={constraintIntents}\n                    icons={icons} constraintIcons={constraintIcons}\n                    selectedIntents={selectedIntents} selectedConstraints={selectedConstraints}\n                    intentsSelections={intentsSelections} constraintsSelections={constraintsSelections}\n                    step={selectionsStep} index={currentSelectionIndex}\n                    onSelection={this.handleSelection}\n                    onClickNext={this.handleClickNext} onClickBack={this.handleClickBack} onClickHelp={this.handleClickHelp} />\n            );\n        } else if (currentScreen === SCREENS.end) {\n            return (\n                <ThankYou onSubmit={this.handleClickNext} onClickBack={this.handleClickBack} />\n            );\n        }\n    }\n\n    render() {\n        const { showHelp } = this.state;\n        const displayedScreen = this.getDisplayedScreen();\n        return (\n            <div className=\"utterances\">\n                <div className=\"container\">\n                    <main>\n                        {displayedScreen}\n                        \n                    </main>\n                </div>\n            </div>\n        );\n    }\n}","import Main from './utterances3/App';\nimport './App.css';\n\nconst App = ({ id, context, contexts, intents, icons, minIntents, constraintIntents, constraintIcons, minConstraints, linkWords, linkWordIdx, minWords, quantifiers, quantifierIdx, maxLength, maxLengthPerIntent }) => {\n  return (\n    <div className=\"App\">\n      <Main id={id} context={context} contexts={contexts} \n            intents={intents} icons={icons} minIntents={minIntents}\n            constraintIntents={constraintIntents} constraintIcons={constraintIcons} minConstraints={minConstraints}\n            linkWords={linkWords} linkWordIdx={linkWordIdx} minWords={minWords}\n            quantifiers={quantifiers} quantifierIdx={quantifierIdx}\n            maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst getData = (attribute, id='root') => {\n  return document.getElementById(id).getAttribute(attribute);\n};\n\nconst id = getData('data-id');\nconst context = getData('data-context');\nconst contexts = getData('data-contexts') ? getData('data-contexts').split(\"|\").map(context => context.trim()) : [];\nconst intents = getData('data-intents') ? getData('data-intents').split(\"|\").filter(x => x && x.length > 0).map(intent => intent.trim()) : [];\nconst icons = getData('data-intent-icons') ? getData('data-intent-icons').split(\"|\").filter(x => x && x.length > 0).map(icon => icon.trim()) : [];\nconst minIntents = getData('data-min-intents') && parseInt(getData('data-min-intents'));\nconst constraintIntents = getData('data-constraints') ? getData('data-constraints').split(\"|\").filter(x => x && x.length > 0).map(intent => intent.trim()) : [];\nconst constraintIcons = getData('data-constraint-icons') ? getData('data-constraint-icons').split(\"|\").filter(x => x && x.length > 0).map(icon => icon.trim()) : [];\nconst minConstraints = getData('data-min-constraints') && parseInt(getData('data-min-constraints'));\nconst linkWords = getData('data-link-words') ? getData('data-link-words').split(\"|\").map(word => ({display: word.trim().split(\":\")[0], verification: word.trim().split(\":\")[1].split(\",\")})) : [];\nconst minWords = getData('min-words') && parseInt(getData('min-words'));\nconst quantifiers = getData('data-quantifiers') ? getData('data-quantifiers').split(\"|\").map(icon => icon.trim()) : [];\nconst maxLength = getData('data-max-length') && parseInt(getData('data-max-length'));\nconst maxLengthPerIntent = getData('data-max-length-per-intent') && parseInt(getData('data-max-length-per-intent'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App id={id} context={context} contexts={contexts}\n      intents={intents} icons={icons} minIntents={minIntents}\n      constraintIntents={constraintIntents} constraintIcons={constraintIcons} minConstraints={minConstraints}\n      linkWords={linkWords} minWords={minWords} quantifiers={quantifiers} \n      maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}